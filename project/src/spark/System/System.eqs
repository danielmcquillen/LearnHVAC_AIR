// sparksetup 2.1.03 [build 051219]
// Program name = C:/vspark210rc7/bin/sparksetup.exe
// Problem name = System
// Time         = 20090729.174648 Wed
// File name    = ./System.eqs
///////////////////////////////////////////////////////////////////////////////


Number of variable(s)        : 512
Number of parameter(s)       : 43
Number of input(s)           : 10
Number of input from link(s) : 14
Number of unknown(s)         : 443
Number of component(s)       : 65
Number of object(s)          : 443


Global variable(s) :
        step                           GLOBAL_TIME                       []
        timestep                       GLOBAL_TIME_STEP                  []


Known variable(s) : 67
        Boiler_C1                      PARAMETER  INIT = 1               []
        Boiler_C2                      PARAMETER  INIT = 0               []
        Boiler_C3                      PARAMETER  INIT = 0               []
        Boiler_FlowLockFlag            PARAMETER  INIT = 1               [{0=false,1=true}]
        Boiler_FlowType                PARAMETER  INIT = 1               [{1=constant,2=variable}]
        Boiler_PLR_max                 PARAMETER  INIT = 0.9             [W/W]
        Boiler_PLR_min                 PARAMETER  INIT = 0.1             [W/W]
        Boiler_ParasiticElecLoad       PARAMETER  INIT = 15              [W]
        Boiler_T_limit                 PARAMETER  INIT = 95              [C]
        Boiler_cp                      PARAMETER  INIT = 4186            [J/(kg.K)]
        Boiler_efficiency              PARAMETER  INIT = 0.9             [W/W]
        Boiler_mdot_design             PARAMETER  INIT = 10              [kg/s]
        Boiler_mdot_tol                PARAMETER  INIT = 0.01            [kg/s]
        CTTwbOutPrev                   PARAMETER  INIT = 25              [C]
        CTfanEff                       PARAMETER  INIT = 0.3             []
        CTfanStatic                    PARAMETER  INIT = 100             [Pa]
        CTmAir                         PARAMETER  INIT = 1               [kg_dryAir/s]
        CTmAirRated                    PARAMETER  INIT = 1               [kg_dryAir/s]
        CTpumpEff                      PARAMETER  INIT = 0.6             []
        CTpumpHead                     PARAMETER  INIT = 3               [m]
        MXactuatorSpeed                PARAMETER  INIT = 0.05            []
        RoomAirflowFrac                PARAMETER  INIT = 0.15            []
        UARoom                         PARAMETER  INIT = 0               [W/C]
        VAVoutSensor_offset            PARAMETER  INIT = 0               []
        VAVoutSensor_timeConstant      PARAMETER  INIT = 30              []
        cRoomAir                       PARAMETER  INIT = 50              [kJ/C]
        chillPumpEff                   PARAMETER  INIT = 3.21            [W]
        chillRatedEIR                  PARAMETER  INIT = 0.3             [W]
        fanSensor_offset               PARAMETER  INIT = 0               []
        fanSensor_timeConstant         PARAMETER  INIT = 5               []
        fanTempRiseEst                 PARAMETER  INIT = 0.5             [C]
        mxSensor_offset                PARAMETER  INIT = 0               []
        mxSensor_timeConstant          PARAMETER  INIT = 30              []
        rmSensor_offset                PARAMETER  INIT = 0               []
        rmSensor_timeConstant          PARAMETER  INIT = 30              []
        s_fan~NONAME4                  PARAMETER  INIT = 0               []
        s_fan~NONAME5                  PARAMETER  INIT = 0               []
        s_fan~NONAME6                  PARAMETER  INIT = 200             []
        s_mx~NONAME4                   PARAMETER  INIT = -20             []
        s_mx~NONAME5                   PARAMETER  INIT = 0               []
        s_mx~NONAME6                   PARAMETER  INIT = 100             []
        supSensor_offset               PARAMETER  INIT = 0               []
        supSensor_timeConstant         PARAMETER  INIT = 30              []
        INPDUMMY                       INPUT      INIT = 0.01            []
        s_VAVout~NONAME4               INPUT      INIT = -20             []
        s_VAVout~NONAME5               INPUT      INIT = 0               []
        s_VAVout~NONAME6               INPUT      INIT = 100             []
        s_rm~NONAME4                   INPUT      INIT = -20             []
        s_rm~NONAME5                   INPUT      INIT = 0               []
        s_rm~NONAME6                   INPUT      INIT = 100             []
        s_supply~NONAME4               INPUT      INIT = -20             []
        s_supply~NONAME5               INPUT      INIT = 0               []
        s_supply~NONAME6               INPUT      INIT = 100             []
        FaniP                          INPUT_FROM_LINK = Fani
        HeatCoolPIiP                   INPUT_FROM_LINK = HeatCoolPIi
        MXprevPos                      INPUT_FROM_LINK = MXPos
        TRoomSSP                       INPUT_FROM_LINK = TRoomSS
        TRoomSensorP                   INPUT_FROM_LINK = TRoomSensor
        TSupMeaP                       INPUT_FROM_LINK = TSupMea
        VAVCFMRealP                    INPUT_FROM_LINK = VAVCFMReal
        VAVCLprevLevel                 INPUT_FROM_LINK = VAVCLcurLevel
        VAVDAMPPosPrev                 INPUT_FROM_LINK = VAVDAMPosReal
        VAVDAMPiP                      INPUT_FROM_LINK = VAVDAMPi
        VAViP                          INPUT_FROM_LINK = VAVi
        last                           INPUT_FROM_LINK = current
        prevFanspeed                   INPUT_FROM_LINK = fanspeed
        uHeatCoolPrevLev               INPUT_FROM_LINK = uHeatCoolCurLev


Dynamic variable(s) : 5
        s_fan~x_sensor                 <- s_fan`sensor`integrator( s_fan`sensor~x_steadyState, s_fan`sensor~xdot, Tstep )
        s_VAVout~x_sensor              <- s_VAVout`sensor`integrator( s_VAVout`sensor~x_steadyState, s_VAVout`sensor~xdot, Tstep )
        s_rm~x_sensor                  <- s_rm`sensor`integrator( s_rm`sensor~x_steadyState, s_rm`sensor~xdot, Tstep )
        s_supply~x_sensor              <- s_supply`sensor`integrator( s_supply`sensor~x_steadyState, s_supply`sensor~xdot, Tstep )
        s_mx~x_sensor                  <- s_mx`sensor`integrator( s_mx`sensor~x_steadyState, s_mx`sensor~xdot, Tstep )


Initializer(s) : 51
        CC`cc`wc`wco~wCond             UNKNOWN    INIT = 0.005           [kg_water/kg_dryAir]
        CC`cc`wc~NONAME16              UNKNOWN    INIT = 0.005           [kg_water/kg_dryAir]
        CC`cc`wc~UAh                   UNKNOWN    INIT = 0.01            [W/deg_C]
        CC`cc`wc~extResist             UNKNOWN    INIT = 0.01            [resist]
        CC`cc`wc~intResist             UNKNOWN    INIT = 0.01            [resist]
        CClvgWB~TWb_est                UNKNOWN    INIT = 10              [deg_C]
        Fani                           UNKNOWN    INIT = 0.01            [-]
        FanlvgWB~TWb_est               UNKNOWN    INIT = 10              [deg_C]
        HCentWB~TWb_est                UNKNOWN    INIT = 10              [deg_C]
        HClvgWB~TWb_est                UNKNOWN    INIT = 10              [deg_C]
        HeatCoolPIi                    UNKNOWN    INIT = 0               [-]
        MXPos                          UNKNOWN    INIT = 0               []
        MixWB~TWb_est                  UNKNOWN    INIT = 10              [deg_C]
        OutWB`wb~h                     UNKNOWN    INIT = 25194.2         [J/kg_dryAir]
        OutWB~TWb_est                  UNKNOWN    INIT = 10              [deg_C]
        RetWB`wb~h                     UNKNOWN    INIT = 25194.2         [J/kg_dryAir]
        RetWB~TWb_est                  UNKNOWN    INIT = 10              [deg_C]
        TRoomSS                        UNKNOWN    INIT = 21              [C]
        TRoomSensor                    UNKNOWN    INIT = 21              []
        TSupMea                        UNKNOWN    INIT = 15              []
        VAVCFMReal                     UNKNOWN    INIT = 0.01            [-]
        VAVCLcurLevel                  UNKNOWN    INIT = 0.5             []
        VAVDAMPi                       UNKNOWN    INIT = 0.01            [-]
        VAVDAMPosReal                  UNKNOWN    INIT = 0               [scalar]
        VAVHClvgWB~TWb_est             UNKNOWN    INIT = 10              [deg_C]
        VAVi                           UNKNOWN    INIT = 0.01            [-]
        chillCondOutletTemp            UNKNOWN    INIT = 0.01            [C]
        chillEvapOutletTemp            UNKNOWN    INIT = 20              [C]
        current                        UNKNOWN    INIT = 1               []
        fanspeed                       UNKNOWN    INIT = 0               [rpm]
        s_VAVout`sensor~xdot           UNKNOWN    INIT = 0.01            []
        s_VAVout~offset                UNKNOWN    INIT = 0.01            []
        s_VAVout~x_real                UNKNOWN    INIT = 0.01            []
        s_VAVout~x_sensor              UNKNOWN    INIT = 0.01            []
        s_fan`sensor~xdot              UNKNOWN    INIT = 0.01            []
        s_fan~offset                   UNKNOWN    INIT = 0.01            []
        s_fan~x_real                   UNKNOWN    INIT = 0.01            []
        s_fan~x_sensor                 UNKNOWN    INIT = 0.01            []
        s_mx`sensor~xdot               UNKNOWN    INIT = 0.01            []
        s_mx~offset                    UNKNOWN    INIT = 0.01            []
        s_mx~x_real                    UNKNOWN    INIT = 0.01            []
        s_mx~x_sensor                  UNKNOWN    INIT = 0.01            []
        s_rm`sensor~xdot               UNKNOWN    INIT = 0.01            []
        s_rm~offset                    UNKNOWN    INIT = 0.01            []
        s_rm~x_real                    UNKNOWN    INIT = 0.01            []
        s_rm~x_sensor                  UNKNOWN    INIT = 0.01            []
        s_supply`sensor~xdot           UNKNOWN    INIT = 0.01            []
        s_supply~offset                UNKNOWN    INIT = 0.01            []
        s_supply~x_real                UNKNOWN    INIT = 0.01            []
        s_supply~x_sensor              UNKNOWN    INIT = 0.01            []
        uHeatCoolCurLev                UNKNOWN    INIT = 0.5             [-]


Component 0
  Type               : MAIN
  Mode               : TIME_INVARIANT
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_fan~NONAME9                  = s_fan`sum3.sum__a( fanSensor_offset, s_fan~NONAME5 )


Component 1
  Type               : MAIN
  Mode               : TIME_INVARIANT
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_fan~offset                   PREDICT_FROM_LINK = s_fan~offset

  Solution sequence : 
[BREAK] s_fan~offset                   <- 0 = s_fan`quot3`op.safprod__residual( s_fan~offset, s_fan~NONAME6, s_fan~NONAME9 )


Component 2
  Type               : MAIN
  Mode               : TIME_INVARIANT
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_mx~NONAME9                   = s_mx`sum3.sum__a( mxSensor_offset, s_mx~NONAME5 )


Component 3
  Type               : MAIN
  Mode               : TIME_INVARIANT
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_mx~offset                    PREDICT_FROM_LINK = s_mx~offset

  Solution sequence : 
[BREAK] s_mx~offset                    <- 0 = s_mx`quot3`op.safprod__residual( s_mx~offset, s_mx~NONAME6, s_mx~NONAME9 )


Component 4
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 6  
  Normal variable(s) : 125
  Break variable(s)  : 0  

  Solution sequence : 
        HeatCoolPIbias , 
        HeatCoolPIfr , 
        HeatCoolPIKd , 
        HeatCoolPIKi , 
        HeatCoolPIKp , 
        uHeatCoolS1 , 
        uHeatCoolS2 , 
        HCUA , 
        HCmLiqOpen , 
        HCStatus , 
        HCTLiqEntCoil , 
        HCBootLeakage , 
        R~.HCDriftedsensor , 
        HCFouledCoil , 
        HCLeakyValve , 
        HCObstructedPipe , 
        HCOversizedValve , 
        R~.HCSensorOffset , 
        HCStuckValve , 
        HCUndersizedCoil , 
        CCmLiqOpen , 
        CCStatus , 
        NONAME1 , 
        CCUA , 
        CCBootLeakage , 
        CCFouledCoil , 
        CCLeakyValve , 
        CCObstructedPipe , 
        CCOversizedValve , 
        CCStuckValve , 
        CCUndersizedCoil , 
        Fanbias , 
        Fanfr , 
        FanKd , 
        FanKi , 
        FanKp , 
        FanmAirLvg , 
        FanmAirMaxEff , 
        FanpStat , 
        R~.FanDeafVFDorIGV , 
        FanStatPresSensorOffset , 
        R~.FanFanTooSmall , 
        R~.FanRangeErrorVFD , 
        R~.FanStuckFanSpeed , 
        R~.FanTotFanFailure , 
        R~.FanWrongFanType , 
        MXTRet , 
        MXTwRet , 
        R~.MXBadPosOADamper , 
        R~.MXBadSensor , 
        R~.MXDeafActuator , 
        MXLeakOADamper , 
        MXLeakRADamper , 
        R~.MXMismatchDampAct , 
        MXReverseActionAct , 
        MXStuckActuator , 
        R~.MXStuckOADamper , 
        VAVbias , 
        VAVDAMPbias , 
        VAVDAMPfr , 
        VAVDAMPKd , 
        VAVDAMPKi , 
        VAVDAMPKp , 
        VAVfr , 
        VAVHCmLiqOpen , 
        VAVHCStatus , 
        VAVHCTLiqEntCoil , 
        R~.VAVHCTs , 
        VAVHCUA , 
        VAVKd , 
        VAVKi , 
        VAVKp , 
        VAVDAMPosMin , 
        R~.VAVBadDmprPosSignal , 
        VAVFlowSensorOffset , 
        R~.VAVBadLoopTune , 
        VAVBadMinPosDamper , 
        R~.VAVBadReheatCoil , 
        VAVBoxTooBig , 
        VAVBoxTooSmall , 
        VAVFailedActuator , 
        VAVHCBootLeakage , 
        R~.VAVHCDriftedsensor , 
        VAVHCFouledCoil , 
        VAVHCLeakyValve , 
        VAVHCObstructedPipe , 
        VAVHCOversizedValve , 
        VAVHCStuckValve , 
        VAVHCUndersizedCoil , 
        VAVLeakyDamper , 
        VAVStuckDamper , 
        R~.VAVTooHighInletAirSP , 
        R~.VAVTooLowInletAirSP , 
        FltBadDPSensor , 
        FltLeakyFilter , 
        FltPartlyClogged , 
        PAtm , 
        RmQSENS , 
        MXTOut , 
        TRoomSP_Heat , 
        TRoomSP_Cool , 
        HeatCoolMode , 
        TRoomSPDB , 
        TSupSet , 
        supSensor_offset_n , 
        TwAirOut , 
        calcInterval , 
        R~.Pause , 
        timeScale , 
        SPARKStatus , 
        MXminOAfrac , 
        Boiler_T_setpoint , 
        Boiler_Qdot_nominal , 
        chillEvapOutletTempSP , 
        chillCondFlowRate , 
        NONAME2 , 
        chillRatedCapacity , 
        NONAME3 , 
        NONAME4 , 
        CTAURated                      = R.readin( INPDUMMY )
        mVAVmax                        = RoomAirflowFrac.safprod__c( FanmAirLvg, RoomAirflowFrac )
        Tstep                          = cal.safprod__c( timestep, calcInterval )
        RetWB`wb~PwSStar               = RetWB`wb`sp.air_satpress__explicit( MXTwRet )
        RetWB`wb~wSStar                = RetWB`wb`hr.air_humratio__w( RetWB`wb~PwSStar, PAtm )
        RetWB`wb~hSStar                = RetWB`wb`e2.air_enthalpy__h( MXTwRet, RetWB`wb~wSStar )


Component 5
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 7  
  Normal variable(s) : 5  
  Break variable(s)  : 2  
        RetWB~TWb_est                  PREDICT_FROM_LINK = RetWB~TWb_est
        RetWB`wb~h                     PREDICT_FROM_LINK = RetWB`wb~h

  Solution sequence : 
        MXwRet                         = RetWB`wb`eq31.eq31__w( RetWB`wb~h, MXTwRet, RetWB`wb~wSStar, RetWB`wb~hSStar )
        RetWB~TDb_2                    = RetWB`NoOp.noop__y_out( RetWB~TWb_est, MXTRet )
        RetWB`esat~pVapSat             = RetWB`esat`sp.air_satpress__explicit( RetWB~TWb_est )
        RetWB`esat~wSat                = RetWB`esat`hm.air_humratio__w( RetWB`esat~pVapSat, PAtm )
        RetWB~h                        = RetWB`e.air_enthalpy__h( MXTRet, MXwRet )
[BREAK] RetWB~TWb_est                  = RetWB`esat`ea.air_enthalpy__TDb( RetWB~h, RetWB`esat~wSat )
[BREAK] RetWB`wb~h                     = RetWB`wb`e1.air_enthalpy__h( RetWB~TDb_2, MXwRet )


Component 6
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 3  
  Normal variable(s) : 3  
  Break variable(s)  : 0  

  Solution sequence : 
        OutWB`wb~PwSStar               = OutWB`wb`sp.air_satpress__explicit( TwAirOut )
        OutWB`wb~wSStar                = OutWB`wb`hr.air_humratio__w( OutWB`wb~PwSStar, PAtm )
        OutWB`wb~hSStar                = OutWB`wb`e2.air_enthalpy__h( TwAirOut, OutWB`wb~wSStar )


Component 7
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 7  
  Normal variable(s) : 5  
  Break variable(s)  : 2  
        OutWB~TWb_est                  PREDICT_FROM_LINK = OutWB~TWb_est
        OutWB`wb~h                     PREDICT_FROM_LINK = OutWB`wb~h

  Solution sequence : 
        MXwOut                         = OutWB`wb`eq31.eq31__w( OutWB`wb~h, TwAirOut, OutWB`wb~wSStar, OutWB`wb~hSStar )
        OutWB~TDb_2                    = OutWB`NoOp.noop__y_out( OutWB~TWb_est, MXTOut )
        OutWB`esat~pVapSat             = OutWB`esat`sp.air_satpress__explicit( OutWB~TWb_est )
        OutWB`esat~wSat                = OutWB`esat`hm.air_humratio__w( OutWB`esat~pVapSat, PAtm )
        OutWB~h                        = OutWB`e.air_enthalpy__h( MXTOut, MXwOut )
[BREAK] OutWB~TWb_est                  = OutWB`esat`ea.air_enthalpy__TDb( OutWB~h, OutWB`esat~wSat )
[BREAK] OutWB`wb~h                     = OutWB`wb`e1.air_enthalpy__h( OutWB~TDb_2, MXwOut )


Component 8
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 29 
  Normal variable(s) : 52 
  Break variable(s)  : 0  

  Solution sequence : 
        uHeatCoolU , 
        HeatCoolPIi                    = HeatCoolPI.PIplusminus( TSupSet, TSupMeaP, HeatCoolPIiP, HeatCoolPIKp, HeatCoolPIKi, HeatCoolPIfr, HeatCoolPIbias, Tstep )
        CCpos , 
        MXcontrolSignal , 
        HCpos , 
        uHeatCoolCurLev                = uHeatCoolSplit.uSplitter( uHeatCoolS1, uHeatCoolS2, uHeatCoolPrevLev, uHeatCoolU, MXTOut, MXTRet, TSupSet, fanTempRiseEst )
        HCTAirEnt , 
        MXTMixReal , 
        HCwAirEnt , 
        MXOAPosDamper , 
        MXRAPosDamper , 
        MXEAPosDamper , 
        MXOAPosDamperReal , 
        MXRAPosDamperReal , 
        MXEAPosDamperReal , 
        MXPos                          = MX.Mix( MXcontrolSignal, MXprevPos, MXactuatorSpeed, MXTOut, MXwOut, MXTRet, MXwRet, MXminOAfrac, MXLeakOADamper, MXLeakRADamper, MXStuckActuator, MXReverseActionAct )
        CCwAirEnt                      = HC`HX`eq2.equal__b( HCwAirEnt )
        CC`cc~wAirLvgD                 = CC`cc`dc`eq2.equal__b( CCwAirEnt )
        HC`HX~capAir                   = HC`HX`cra.cap_rate__cap( FanmAirLvg, HCwAirEnt )
        HC~Authority , 
        HC~fLeak , 
        HCposReal , 
        HC~mLiqOpenReal , 
        HC~UAReal                      = HC`f.heatingcoil_fault( HCStuckValve, HCBootLeakage, HCOversizedValve, HCLeakyValve, HCObstructedPipe, HCUndersizedCoil, HCFouledCoil, HCStatus, HCpos, HCmLiqOpen, HCUA )
        HCmLiqEntCoil                  = HC`v.valve_mLiqCoil( HCposReal, HC~Authority, HC~mLiqOpenReal, HC~fLeak )
        HC`HX~capLiq                   = HC`HX`crl.capratel__cap( HCmLiqEntCoil )
        HC`HX`ex~cRatiop               = HC`HX`ex`quot2.quot__b_or_c( HC`HX~capLiq, HC`HX~capAir )
        HC`HX`ex~ntup                  = HC`HX`ex`quot1.quot__b_or_c( HC~UAReal, HC`HX~capLiq )
        HC`HX`ex~effp                  = HC`HX`ex`effect.effc1u__effp( HC`HX`ex~ntup, HC`HX`ex~cRatiop )
        HC`HX`ex~qRef                  = HC`HX`ex`cd1.cond_q( HCTLiqEntCoil, HCTAirEnt, HC`HX~capLiq )
        HC`HX`ex~NONAME8               = HC`HX`ex`prod.prod__c( HC`HX`ex~qRef, HC`HX`ex~effp )
        CCTAirEnt                      = HC`HX`ex`cd3.cond_T1( HC`HX`ex~NONAME8, HCTAirEnt, HC`HX~capAir )
        CC`cc`wc~L_hAirEnt             = CC`cc`wc`e.enthalpy__h( CCTAirEnt, CCwAirEnt )
        CC`cc`dc~capAir                = CC`cc`wc`wco`cr.cap_rate__cap( FanmAirLvg, CCwAirEnt )
        CC~Authority , 
        CC~mLeak , 
        CCposReal , 
        CC~mLiqOpenReal , 
        CC~UAReal                      = CC`f.coolingcoil_fault( CCStuckValve, CCBootLeakage, CCOversizedValve, CCLeakyValve, CCObstructedPipe, CCUndersizedCoil, CCFouledCoil, CCStatus, CCpos, CCmLiqOpen, CCUA )
        CCmLiqEntCoil                  = CC`v.valve_mLiqCoil( CCposReal, CC~Authority, CC~mLiqOpenReal, CC~mLeak )
        CC`cc`wc~capLiq                = CC`cc`wc`crl.capratel__cap( CCmLiqEntCoil )
        CC`cc`dc`ex~cRatiop            = CC`cc`dc`ex`quot2.quot__b_or_c( CC`cc`wc~capLiq, CC`cc`dc~capAir )
        CC~ATot , 
        CC~UExtW , 
        CC~UIntW                       = CC`U.UASplit( CC~UAReal )
        CC`cc~UTotD                    = CC`cc`ser.sercond__UTot( CC~UExtW, CC~UIntW )
        CC`cc~UATotD                   = CC`cc`p1.prod__c( CC~ATot, CC`cc~UTotD )
        CC`cc`dc`ex~ntup               = CC`cc`dc`ex`quot1.quot__b_or_c( CC`cc~UATotD, CC`cc`wc~capLiq )
        CC`cc`dc`ex~effp               = CC`cc`dc`ex`effect.effctr__effp( CC`cc`dc`ex~ntup, CC`cc`dc`ex~cRatiop )
        CC`cc`wc`es2`dp~PwDP           = CC`cc`wc`es2`dp`hr.humratio__Pw( CCwAirEnt, PAtm )
        CC`cc~TDpW                     = CC`cc`wc`es2`dp`sp.satpress__T( CC`cc`wc`es2`dp~PwDP )
        CC`cc~UAIntW                   = CC`cc`p3.prod__c( CC~ATot, CC~UIntW )


Component 9
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        CC`cc`wc~intResist             PREDICT_FROM_LINK = CC`cc`wc~intResist

  Solution sequence : 
[BREAK] CC`cc`wc~intResist             <- 0 = CC`cc`wc`sr2.safrecip__residual( CC`cc~UAIntW, CC`cc`wc~intResist )


Component 10
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        CC`cc`wc~CpAir                 = CC`cc`wc`cpair.CpAir__Cpair( CCwAirEnt )
        CC`cc~UAExtW                   = CC`cc`p2.prod__c( CC~ATot, CC~UExtW )


Component 11
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        CC`cc`wc~extResist             PREDICT_FROM_LINK = CC`cc`wc~extResist

  Solution sequence : 
[BREAK] CC`cc`wc~extResist             <- 0 = CC`cc`wc`sr1.safrecip__residual( CC`cc~UAExtW, CC`cc`wc~extResist )


Component 12
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        CC`cc`wc~rExt                  = CC`cc`wc`p1.prod__c( CC`cc`wc~extResist, CC`cc`wc~CpAir )
        CC`cc`wc~hAirEntSat            = CC`cc`wc`es2`e.enthalpy__h( CC`cc~TDpW, CCwAirEnt )


Component 13
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 32 
  Normal variable(s) : 36 
  Break variable(s)  : 4  
        chillEvapOutletTemp            PREDICT_FROM_LINK = chillEvapOutletTemp
        chillCondOutletTemp            PREDICT_FROM_LINK = chillCondOutletTemp
        CC`cc`wc~UAh                   PREDICT_FROM_LINK = CC`cc`wc~UAh
        CC`cc`wc~NONAME16              PREDICT_FROM_LINK = CC`cc`wc~NONAME16

  Solution sequence : 
        CC`cc`wc`es3`dp~PwDP           = CC`cc`wc`es3`dp`hr.humratio__Pw( CC`cc`wc~NONAME16, PAtm )
        CC`cc~TSurfW                   = CC`cc`wc`es3`dp`sp.satpress__T( CC`cc`wc`es3`dp~PwDP )
        CC`cc`wc`es1`dp~PwDP           = CC`cc`wc`es1`dp`sp.satpress__P( chillEvapOutletTemp )
        CC`cc`wc`es1~NONAME3           = CC`cc`wc`es1`dp`hr.humratio__w( CC`cc`wc`es1`dp~PwDP, PAtm )
        CC`cc`wc~hLiqEntSat            = CC`cc`wc`es1`e.enthalpy__h( chillEvapOutletTemp, CC`cc`wc`es1~NONAME3 )
        CC`cc`wc`pd~num                = CC`cc`wc`pd`d1.diff__difference( CC`cc`wc~hAirEntSat, CC`cc`wc~hLiqEntSat )
        CC`cc`wc`pd~denom              = CC`cc`wc`pd`d2.diff__difference( CC`cc~TDpW, chillEvapOutletTemp )
        CC`cc`wc~cpSat                 = CC`cc`wc`pd`q.quot__b_or_c( CC`cc`wc`pd~num, CC`cc`wc`pd~denom )
        CC`cc`wc~rInt                  = CC`cc`wc`p2.prod__c( CC`cc`wc~intResist, CC`cc`wc~cpSat )
        CC`cc`wc~resistRatio           = CC`cc`wc`p3.prod__c( CC`cc`wc~UAh, CC`cc`wc~rInt )
        CC`cc`wc`ex~NONAME9            = CC`cc`wc`ex`cd1.cond_q( CC`cc`wc~L_hAirEnt, CC`cc`wc~hLiqEntSat, FanmAirLvg )
        CC`cc`wc`ex~NONAME4            = CC`cc`wc`ex`quot1.quot__b_or_c( CC`cc`wc~UAh, FanmAirLvg )
        CC`cc`wc~capLiqWet             = CC`cc`wc`sq.quot__b_or_c( CC`cc`wc~capLiq, CC`cc`wc~cpSat )
        CC`cc`wc`ex~NONAME5            = CC`cc`wc`ex`quot2.quot__b_or_c( FanmAirLvg, CC`cc`wc~capLiqWet )
        CC`cc`wc`ex~NONAME6            = CC`cc`wc`ex`effect.effctr__effp( CC`cc`wc`ex~NONAME4, CC`cc`wc`ex~NONAME5 )
        CC`cc~NONAME16                 = CC`cc`wc`ex`prod.prod__c( CC`cc`wc`ex~NONAME9, CC`cc`wc`ex~NONAME6 )
        CC`cc`wc~hLiqLvgSat            = CC`cc`wc`ex`cd3.cond_T1( CC`cc~NONAME16, CC`cc`wc~hLiqEntSat, CC`cc`wc~capLiqWet )
        CC`cc`wc~hSurfEntSat           = CC`cc`wc`li.lintrp__y( CC`cc`wc~resistRatio, CC`cc`wc~hLiqLvgSat, CC`cc`wc~L_hAirEnt )
        CC`cc`wc~rTot                  = CC`cc`wc`s.sum__c( CC`cc`wc~rExt, CC`cc`wc~rInt )
        CC`cc`dc`ex~qRef               = CC`cc`dc`ex`cd1.cond_q( chillEvapOutletTemp, CCTAirEnt, CC`cc`wc~capLiq )
        CC`cc`dc`ex~NONAME8            = CC`cc`dc`ex`prod.prod__c( CC`cc`dc`ex~qRef, CC`cc`dc`ex~effp )
        CC`cc~NONAME10                 = CC`cc`dc`ex`cd3.cond_T1( CC`cc`dc`ex~NONAME8, CCTAirEnt, CC`cc`dc~capAir )
        CC`cc~NONAME15                 = CC`cc`dc`cd.cond_q( CCTAirEnt, CC`cc~NONAME10, CC`cc`dc~capAir )
        CC`cc~NONAME17                 = CC`cc`sw.cclogic__s( chillEvapOutletTemp, CC`cc~TSurfW, CC`cc~TDpW, CC`cc~NONAME15, CC`cc~NONAME16 )
        CCqTot                         = CC`cc`sel4.select__c( CC`cc~NONAME17, CC`cc~NONAME16, CC`cc~NONAME15 )
        chillCondInletTemp , 
        CTTWbOut , 
        CTqTot , 
        CTpumpPower , 
        CTfanPower                     = coolingTower.coolingTowerNTU( TwAirOut, chillCondOutletTemp, chillCondFlowRate, CTmAir, CTAURated, CTmAirRated, CTfanStatic, CTfanEff, CTpumpHead, CTpumpEff, Tstep, CTTwbOutPrev )
        CC`cc~NONAME13                 = CC`cc`wc`cd2.cond_T1( CC`cc~NONAME16, chillEvapOutletTemp, CC`cc`wc~capLiq )
        CC`cc~NONAME12                 = CC`cc`dc`ex`cd2.cond_T2( CC`cc`dc`ex~NONAME8, chillEvapOutletTemp, CC`cc`wc~capLiq )
        chillEvapInletTemp             = CC`cc`sel3.select__c( CC`cc~NONAME17, CC`cc~NONAME13, CC`cc~NONAME12 )
[BREAK] chillEvapOutletTemp , 
[BREAK] chillCondOutletTemp , 
        chillCoolingPower , 
        chillCompPower , 
        chillPumpPower                 = chiller.chillerDOE2( chillEvapInletTemp, CCmLiqOpen, chillEvapOutletTempSP, chillCondInletTemp, chillCondFlowRate, CCqTot, chillRatedCapacity, chillRatedEIR, chillPumpEff, Tstep )
[BREAK] CC`cc`wc~UAh                   <- 0 = CC`cc`wc`sr3.safrecip__residual( CC`cc`wc~rTot, CC`cc`wc~UAh )
[BREAK] CC`cc`wc~NONAME16              = CC`cc`wc`es3`e.enthalpy__w( CC`cc`wc~hSurfEntSat, CC`cc~TSurfW )


Component 14
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 4  
  Normal variable(s) : 4  
  Break variable(s)  : 0  

  Solution sequence : 
        CC`cc`wc~NONAME9               = CC`cc`wc`cd1.cond_T2( CC`cc~NONAME16, CC`cc`wc~L_hAirEnt, FanmAirLvg )
        CC`cc`wc`wco~ntu               = CC`cc`wc`wco`sq.quot__b_or_c( CC`cc~UAExtW, CC`cc`dc~capAir )
        CC`cc`wc`wco~eff               = CC`cc`wc`wco`eff.effntu1__eff( CC`cc`wc`wco~ntu )
        CC`cc`wc`wco~hCondSat          = CC`cc`wc`wco`li1.lintrp__hibnd( CC`cc`wc`wco~eff, CC`cc`wc~NONAME9, CC`cc`wc~L_hAirEnt )


Component 15
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        CC`cc`wc`wco~wCond             PREDICT_FROM_LINK = CC`cc`wc`wco~wCond

  Solution sequence : 
        CC`cc`wc`wco`es`dp~PwDP        = CC`cc`wc`wco`es`dp`hr.humratio__Pw( CC`cc`wc`wco~wCond, PAtm )
        CC`cc`wc`wco`es~NONAME2        = CC`cc`wc`wco`es`dp`sp.satpress__T( CC`cc`wc`wco`es`dp~PwDP )
[BREAK] CC`cc`wc`wco~wCond             = CC`cc`wc`wco`es`e.enthalpy__w( CC`cc`wc`wco~hCondSat, CC`cc`wc`wco`es~NONAME2 )


Component 16
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 5  
  Normal variable(s) : 5  
  Break variable(s)  : 0  

  Solution sequence : 
        CC`cc`wc`wco~wAirLvgWet        = CC`cc`wc`wco`li2.lintrp__y( CC`cc`wc`wco~eff, CCwAirEnt, CC`cc`wc`wco~wCond )
        CC`cc~wAirLvgW                 = CC`cc`wc`wco`min1.min2( CCwAirEnt, CC`cc`wc`wco~wAirLvgWet )
        FanwAirEnt                     = CC`cc`sel2.select__c( CC`cc~NONAME17, CC`cc~wAirLvgW, CC`cc~wAirLvgD )
        CC`cc~NONAME11                 = CC`cc`wc`wco`e.enthalpy__TDb( CC`cc`wc~NONAME9, CC`cc~wAirLvgW )
        FanTAirEnt                     = CC`cc`sel1.select__c( CC`cc~NONAME17, CC`cc~NONAME11, CC`cc~NONAME10 )


Component 17
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 10 
  Normal variable(s) : 16 
  Break variable(s)  : 2  
        s_fan`sensor~xdot              PREDICT_FROM_LINK = s_fan`sensor~xdot
        s_fan~x_real                   PREDICT_FROM_LINK = s_fan~x_real

  Solution sequence : 
        s_fan`sensor~x_steadyState     = s_fan`sensor`offsetSum.sum__c( s_fan~x_real, s_fan~offset )
        s_fan~x_sensor                 = [INTEGRATOR] s_fan`sensor`integrator.bfd_formula( s_fan`sensor~x_steadyState, s_fan`sensor~xdot, Tstep )
        s_fan~NONAME8                  = s_fan`quot2`op.safprod__c( s_fan~x_sensor, s_fan~NONAME6 )
        FanpStatSensorReal             = s_fan`sum2.sum__c( s_fan~NONAME8, s_fan~NONAME4 )
        FannCon , 
        Fani                           = FanPI.PIplusminus( FanpStat, FanpStatSensorReal, FaniP, FanKp, FanKi, Fanfr, Fanbias, Tstep )
        Fanp , 
        VAVHCTAirEnt , 
        VAVHCwAirEnt , 
        FanpowerTot , 
        FanpStatSS , 
        FanpStatMea , 
        fanspeed , 
        FaneffShaft                    = fa.fan( FanTAirEnt, FanwAirEnt, FannCon, FanmAirLvg, FanmAirMaxEff, FanStatPresSensorOffset, prevFanspeed )
        s_fan~NONAME7                  = s_fan`sum1.sum__a( FanpStatSS, s_fan~NONAME4 )
        s_fan`sensor~x_delta           = s_fan`sensor`xDotSum.sum__a( s_fan`sensor~x_steadyState, s_fan~x_sensor )
[BREAK] s_fan`sensor~xdot              <- 0 = s_fan`sensor`xDotQuot`op.safprod__residual( s_fan`sensor~xdot, fanSensor_timeConstant, s_fan`sensor~x_delta )
[BREAK] s_fan~x_real                   <- 0 = s_fan`quot1`op.safprod__residual( s_fan~x_real, s_fan~NONAME6, s_fan~NONAME7 )


Component 18
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 17 
  Normal variable(s) : 26 
  Break variable(s)  : 0  

  Solution sequence : 
        TRoomSP                        = VAVSPmanager.VAVsetpointmanager( TRoomSP_Heat, TRoomSP_Cool, HeatCoolMode )
        VAVPICS , 
        VAVi                           = VAVPI.PIplusminus( TRoomSP, TRoomSensorP, VAViP, VAVKp, VAVKi, VAVfr, VAVbias, Tstep )
        VAVCFMSP , 
        VAVHCpos , 
        VAVCLcurLevel                  = VAV_control.VAV_control( mVAVmax, VAVPICS, VAVCLprevLevel )
        VAVDAMPosCon , 
        VAVDAMPi                       = VAVDAMPPI.PIplusminus( VAVCFMSP, VAVCFMRealP, VAVDAMPiP, VAVDAMPKp, VAVDAMPKi, VAVDAMPfr, VAVDAMPbias, Tstep )
        VAVDAMPosReal                  = VAV_damper_position.VAV_min( VAVDAMPosCon, VAVDAMPosMin, VAVBadMinPosDamper, VAVDAMPPosPrev )
        VAVHCmAirEnt , 
        VAVCFMReal                     = VAV_damper.VAV_damper( VAVDAMPosReal, FanpStatSS, mVAVmax, VAVStuckDamper, VAVLeakyDamper, VAVFlowSensorOffset, VAVFailedActuator, VAVBoxTooBig, VAVBoxTooSmall )
        VAVHC`HX~capAir                = VAVHC`HX`cra.cap_rate__cap( VAVHCmAirEnt, VAVHCwAirEnt )
        VAVHC~Authority , 
        VAVHC~fLeak , 
        VAVHCposReal , 
        VAVHC~mLiqOpenReal , 
        VAVHC~UAReal                   = VAVHC`f.heatingcoil_fault( VAVHCStuckValve, VAVHCBootLeakage, VAVHCOversizedValve, VAVHCLeakyValve, VAVHCObstructedPipe, VAVHCUndersizedCoil, VAVHCFouledCoil, VAVHCStatus, VAVHCpos, VAVHCmLiqOpen, VAVHCUA )
        VAVHCmLiqEntCoil               = VAVHC`v.valve_mLiqCoil( VAVHCposReal, VAVHC~Authority, VAVHC~mLiqOpenReal, VAVHC~fLeak )
        VAVHC`HX~capLiq                = VAVHC`HX`crl.capratel__cap( VAVHCmLiqEntCoil )
        VAVHC`HX`ex~cRatiop            = VAVHC`HX`ex`quot2.quot__b_or_c( VAVHC`HX~capLiq, VAVHC`HX~capAir )
        VAVHC`HX`ex~ntup               = VAVHC`HX`ex`quot1.quot__b_or_c( VAVHC~UAReal, VAVHC`HX~capLiq )
        VAVHC`HX`ex~effp               = VAVHC`HX`ex`effect.effc1u__effp( VAVHC`HX`ex~ntup, VAVHC`HX`ex~cRatiop )
        VAVHC`HX`ex~qRef               = VAVHC`HX`ex`cd1.cond_q( VAVHCTLiqEntCoil, VAVHCTAirEnt, VAVHC`HX~capLiq )
        VAVHC`HX`ex~NONAME8            = VAVHC`HX`ex`prod.prod__c( VAVHC`HX`ex~qRef, VAVHC`HX`ex~effp )
        VAVHCTAirLvg                   = VAVHC`HX`ex`cd3.cond_T1( VAVHC`HX`ex~NONAME8, VAVHCTAirEnt, VAVHC`HX~capAir )
        VAVHClvgWB~h                   = VAVHClvgWB`e.air_enthalpy__h( VAVHCTAirLvg, VAVHCwAirEnt )


Component 19
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        VAVHClvgWB~TWb_est             PREDICT_FROM_LINK = VAVHClvgWB~TWb_est

  Solution sequence : 
        VAVHClvgWB`esat~pVapSat        = VAVHClvgWB`esat`sp.air_satpress__explicit( VAVHClvgWB~TWb_est )
        VAVHClvgWB`esat~wSat           = VAVHClvgWB`esat`hm.air_humratio__w( VAVHClvgWB`esat~pVapSat, PAtm )
[BREAK] VAVHClvgWB~TWb_est             = VAVHClvgWB`esat`ea.air_enthalpy__TDb( VAVHClvgWB~h, VAVHClvgWB`esat~wSat )


Component 20
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        VAVHClvgWB~TDb_2               = VAVHClvgWB`NoOp.noop__y_out( VAVHClvgWB~TWb_est, VAVHCTAirLvg )
        VAVHClvgWB`wb~h                = VAVHClvgWB`wb`e1.air_enthalpy__h( VAVHClvgWB~TDb_2, VAVHCwAirEnt )


Component 21
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        VAVHCTwAirLvg                  PREDICT_FROM_LINK = VAVHClvgWB~TWb_est

  Solution sequence : 
        VAVHClvgWB`wb~PwSStar          = VAVHClvgWB`wb`sp.air_satpress__explicit( VAVHCTwAirLvg )
        VAVHClvgWB`wb~wSStar           = VAVHClvgWB`wb`hr.air_humratio__w( VAVHClvgWB`wb~PwSStar, PAtm )
        VAVHClvgWB`wb~hSStar           = VAVHClvgWB`wb`e2.air_enthalpy__h( VAVHCTwAirLvg, VAVHClvgWB`wb~wSStar )
[BREAK] VAVHCTwAirLvg                  <- 0 = VAVHClvgWB`wb`eq31.eq31__Residual( VAVHClvgWB`wb~h, VAVHCwAirEnt, VAVHClvgWB`wb~wSStar, VAVHClvgWB`wb~hSStar, VAVHCTwAirLvg )


Component 22
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        FanlvgWB~h                     = FanlvgWB`e.air_enthalpy__h( VAVHCTAirEnt, VAVHCwAirEnt )


Component 23
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        FanlvgWB~TWb_est               PREDICT_FROM_LINK = FanlvgWB~TWb_est

  Solution sequence : 
        FanlvgWB`esat~pVapSat          = FanlvgWB`esat`sp.air_satpress__explicit( FanlvgWB~TWb_est )
        FanlvgWB`esat~wSat             = FanlvgWB`esat`hm.air_humratio__w( FanlvgWB`esat~pVapSat, PAtm )
[BREAK] FanlvgWB~TWb_est               = FanlvgWB`esat`ea.air_enthalpy__TDb( FanlvgWB~h, FanlvgWB`esat~wSat )


Component 24
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        FanlvgWB~TDb_2                 = FanlvgWB`NoOp.noop__y_out( FanlvgWB~TWb_est, VAVHCTAirEnt )
        FanlvgWB`wb~h                  = FanlvgWB`wb`e1.air_enthalpy__h( FanlvgWB~TDb_2, VAVHCwAirEnt )


Component 25
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        VAVHCTwAirEnt                  PREDICT_FROM_LINK = FanlvgWB~TWb_est

  Solution sequence : 
        FanlvgWB`wb~PwSStar            = FanlvgWB`wb`sp.air_satpress__explicit( VAVHCTwAirEnt )
        FanlvgWB`wb~wSStar             = FanlvgWB`wb`hr.air_humratio__w( FanlvgWB`wb~PwSStar, PAtm )
        FanlvgWB`wb~hSStar             = FanlvgWB`wb`e2.air_enthalpy__h( VAVHCTwAirEnt, FanlvgWB`wb~wSStar )
[BREAK] VAVHCTwAirEnt                  <- 0 = FanlvgWB`wb`eq31.eq31__Residual( FanlvgWB`wb~h, VAVHCwAirEnt, FanlvgWB`wb~wSStar, FanlvgWB`wb~hSStar, VAVHCTwAirEnt )


Component 26
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        CClvgWB~h                      = CClvgWB`e.air_enthalpy__h( FanTAirEnt, FanwAirEnt )


Component 27
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        CClvgWB~TWb_est                PREDICT_FROM_LINK = CClvgWB~TWb_est

  Solution sequence : 
        CClvgWB`esat~pVapSat           = CClvgWB`esat`sp.air_satpress__explicit( CClvgWB~TWb_est )
        CClvgWB`esat~wSat              = CClvgWB`esat`hm.air_humratio__w( CClvgWB`esat~pVapSat, PAtm )
[BREAK] CClvgWB~TWb_est                = CClvgWB`esat`ea.air_enthalpy__TDb( CClvgWB~h, CClvgWB`esat~wSat )


Component 28
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        CClvgWB~TDb_2                  = CClvgWB`NoOp.noop__y_out( CClvgWB~TWb_est, FanTAirEnt )
        CClvgWB`wb~h                   = CClvgWB`wb`e1.air_enthalpy__h( CClvgWB~TDb_2, FanwAirEnt )


Component 29
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        FanTwAirEnt                    PREDICT_FROM_LINK = CClvgWB~TWb_est

  Solution sequence : 
        CClvgWB`wb~PwSStar             = CClvgWB`wb`sp.air_satpress__explicit( FanTwAirEnt )
        CClvgWB`wb~wSStar              = CClvgWB`wb`hr.air_humratio__w( CClvgWB`wb~PwSStar, PAtm )
        CClvgWB`wb~hSStar              = CClvgWB`wb`e2.air_enthalpy__h( FanTwAirEnt, CClvgWB`wb~wSStar )
[BREAK] FanTwAirEnt                    <- 0 = CClvgWB`wb`eq31.eq31__Residual( CClvgWB`wb~h, FanwAirEnt, CClvgWB`wb~wSStar, CClvgWB`wb~hSStar, FanTwAirEnt )


Component 30
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        HClvgWB~h                      = HClvgWB`e.air_enthalpy__h( CCTAirEnt, CCwAirEnt )


Component 31
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        HClvgWB~TWb_est                PREDICT_FROM_LINK = HClvgWB~TWb_est

  Solution sequence : 
        HClvgWB`esat~pVapSat           = HClvgWB`esat`sp.air_satpress__explicit( HClvgWB~TWb_est )
        HClvgWB`esat~wSat              = HClvgWB`esat`hm.air_humratio__w( HClvgWB`esat~pVapSat, PAtm )
[BREAK] HClvgWB~TWb_est                = HClvgWB`esat`ea.air_enthalpy__TDb( HClvgWB~h, HClvgWB`esat~wSat )


Component 32
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        HClvgWB~TDb_2                  = HClvgWB`NoOp.noop__y_out( HClvgWB~TWb_est, CCTAirEnt )
        HClvgWB`wb~h                   = HClvgWB`wb`e1.air_enthalpy__h( HClvgWB~TDb_2, CCwAirEnt )


Component 33
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        CCTwAirEnt                     PREDICT_FROM_LINK = HClvgWB~TWb_est

  Solution sequence : 
        HClvgWB`wb~PwSStar             = HClvgWB`wb`sp.air_satpress__explicit( CCTwAirEnt )
        HClvgWB`wb~wSStar              = HClvgWB`wb`hr.air_humratio__w( HClvgWB`wb~PwSStar, PAtm )
        HClvgWB`wb~hSStar              = HClvgWB`wb`e2.air_enthalpy__h( CCTwAirEnt, HClvgWB`wb~wSStar )
[BREAK] CCTwAirEnt                     <- 0 = HClvgWB`wb`eq31.eq31__Residual( HClvgWB`wb~h, CCwAirEnt, HClvgWB`wb~wSStar, HClvgWB`wb~hSStar, CCTwAirEnt )


Component 34
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        HCentWB~h                      = HCentWB`e.air_enthalpy__h( HCTAirEnt, HCwAirEnt )


Component 35
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        HCentWB~TWb_est                PREDICT_FROM_LINK = HCentWB~TWb_est

  Solution sequence : 
        HCentWB`esat~pVapSat           = HCentWB`esat`sp.air_satpress__explicit( HCentWB~TWb_est )
        HCentWB`esat~wSat              = HCentWB`esat`hm.air_humratio__w( HCentWB`esat~pVapSat, PAtm )
[BREAK] HCentWB~TWb_est                = HCentWB`esat`ea.air_enthalpy__TDb( HCentWB~h, HCentWB`esat~wSat )


Component 36
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        HCentWB~TDb_2                  = HCentWB`NoOp.noop__y_out( HCentWB~TWb_est, HCTAirEnt )
        HCentWB`wb~h                   = HCentWB`wb`e1.air_enthalpy__h( HCentWB~TDb_2, HCwAirEnt )


Component 37
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        HCTwAirEnt                     PREDICT_FROM_LINK = HCentWB~TWb_est

  Solution sequence : 
        HCentWB`wb~PwSStar             = HCentWB`wb`sp.air_satpress__explicit( HCTwAirEnt )
        HCentWB`wb~wSStar              = HCentWB`wb`hr.air_humratio__w( HCentWB`wb~PwSStar, PAtm )
        HCentWB`wb~hSStar              = HCentWB`wb`e2.air_enthalpy__h( HCTwAirEnt, HCentWB`wb~wSStar )
[BREAK] HCTwAirEnt                     <- 0 = HCentWB`wb`eq31.eq31__Residual( HCentWB`wb~h, HCwAirEnt, HCentWB`wb~wSStar, HCentWB`wb~hSStar, HCTwAirEnt )


Component 38
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        MixWB~TWb_est                  PREDICT_FROM_LINK = MixWB~TWb_est

  Solution sequence : 
        MixWB`esat~pVapSat             = MixWB`esat`sp.air_satpress__explicit( MixWB~TWb_est )
        MixWB`esat~wSat                = MixWB`esat`hm.air_humratio__w( MixWB`esat~pVapSat, PAtm )
[BREAK] MixWB~TWb_est                  = MixWB`esat`ea.air_enthalpy__TDb( HCentWB~h, MixWB`esat~wSat )


Component 39
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        MixWB~TDb_2                    = MixWB`NoOp.noop__y_out( MixWB~TWb_est, HCTAirEnt )
        MixWB`wb~h                     = MixWB`wb`e1.air_enthalpy__h( MixWB~TDb_2, HCwAirEnt )


Component 40
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 4  
  Normal variable(s) : 3  
  Break variable(s)  : 1  
        MXTwmix                        PREDICT_FROM_LINK = MixWB~TWb_est

  Solution sequence : 
        MixWB`wb~PwSStar               = MixWB`wb`sp.air_satpress__explicit( MXTwmix )
        MixWB`wb~wSStar                = MixWB`wb`hr.air_humratio__w( MixWB`wb~PwSStar, PAtm )
        MixWB`wb~hSStar                = MixWB`wb`e2.air_enthalpy__h( MXTwmix, MixWB`wb~wSStar )
[BREAK] MXTwmix                        <- 0 = MixWB`wb`eq31.eq31__Residual( MixWB`wb~h, HCwAirEnt, MixWB`wb~wSStar, MixWB`wb~hSStar, MXTwmix )


Component 41
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 16 
  Normal variable(s) : 24 
  Break variable(s)  : 0  

  Solution sequence : 
        HCTLiqLvgCoil                  = HC`HX`ex`cd2.cond_T2( HC`HX`ex~NONAME8, HCTLiqEntCoil, HC`HX~capLiq )
        HCTLiqBypass , 
        HCTLiqEntValve , 
        HCTLiqLvgValve , 
        HCmLiqLvgCoil , 
        HCmLiqBypass , 
        Boiler_mdot_locked , 
        HCmLiqEntValve                 = HC`ho.coil_mixing( HCTLiqEntCoil, HCTLiqLvgCoil, HC~mLiqOpenReal, HCmLiqEntCoil )
        HC~qHeating                    = HC`HX`cd.cond_q( HCTAirEnt, CCTAirEnt, HC`HX~capAir )
        Boiler_Load_req                = HC`neg_qt.neg__c( HC~qHeating )
        Boiler_mdot , 
        Boiler_Qdot , 
        Boiler_T_outlet                = boiler`logic.boiler_logic__evaluate( Boiler_FlowLockFlag, Boiler_FlowType, Boiler_Load_req, Boiler_Qdot_nominal, HCTLiqLvgValve, Boiler_T_setpoint, Boiler_T_limit, Boiler_mdot_locked, Boiler_mdot_tol, Boiler_mdot_design, Boiler_cp )
        boiler~quot_PLR                = boiler`quot_PLR.quot__b_or_c( Boiler_Qdot, Boiler_Qdot_nominal )
        Boiler_TheorFuelUsed           = boiler`quot_TheorUse.quot__b_or_c( Boiler_Qdot, Boiler_efficiency )
        Boiler_PLR                     = boiler`bound_PLR.bound__y( Boiler_PLR_min, Boiler_PLR_max, boiler~quot_PLR )
        Boiler_ParasiticElecPower      = boiler`parasitic.boiler_parasitic__evaluate( Boiler_ParasiticElecLoad, Boiler_PLR )
        Boiler_FuelUsed                = boiler`fuel.boiler_fuel__evaluate( Boiler_TheorFuelUsed, Boiler_C1, Boiler_C2, Boiler_C3, Boiler_PLR )
        CC`cc~NONAME14                 = CC`cc`wc`wco`cd.cond_q( CCTAirEnt, CC`cc~NONAME11, CC`cc`dc~capAir )
        CCqSen                         = CC`cc`sel5.select__c( CC`cc~NONAME17, CC`cc~NONAME14, CC`cc~NONAME15 )
        CC~qLat1                       = CC`s1.sum__a( CCqSen, CCqTot )
        VAVHC~qHeating                 = VAVHC`HX`cd.cond_q( VAVHCTAirEnt, VAVHCTAirLvg, VAVHC`HX~capAir )
        VAVHCq                         = VAVHC`neg_qt.neg__c( VAVHC~qHeating )
        s_VAVout~NONAME9               = s_VAVout`sum3.sum__a( VAVoutSensor_offset, s_VAVout~NONAME5 )


Component 42
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_VAVout~offset                PREDICT_FROM_LINK = s_VAVout~offset

  Solution sequence : 
[BREAK] s_VAVout~offset                <- 0 = s_VAVout`quot3`op.safprod__residual( s_VAVout~offset, s_VAVout~NONAME6, s_VAVout~NONAME9 )


Component 43
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_VAVout~NONAME7               = s_VAVout`sum1.sum__a( VAVHCTAirLvg, s_VAVout~NONAME4 )


Component 44
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_VAVout~x_real                PREDICT_FROM_LINK = s_VAVout~x_real

  Solution sequence : 
[BREAK] s_VAVout~x_real                <- 0 = s_VAVout`quot1`op.safprod__residual( s_VAVout~x_real, s_VAVout~NONAME6, s_VAVout~NONAME7 )


Component 45
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_VAVout`sensor~x_steadyState  = s_VAVout`sensor`offsetSum.sum__c( s_VAVout~x_real, s_VAVout~offset )


Component 46
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        s_VAVout`sensor~xdot           PREDICT_FROM_LINK = s_VAVout`sensor~xdot

  Solution sequence : 
        s_VAVout~x_sensor              = [INTEGRATOR] s_VAVout`sensor`integrator.bfd_formula( s_VAVout`sensor~x_steadyState, s_VAVout`sensor~xdot, Tstep )
        s_VAVout`sensor~x_delta        = s_VAVout`sensor`xDotSum.sum__a( s_VAVout`sensor~x_steadyState, s_VAVout~x_sensor )
[BREAK] s_VAVout`sensor~xdot           <- 0 = s_VAVout`sensor`xDotQuot`op.safprod__residual( s_VAVout`sensor~xdot, VAVoutSensor_timeConstant, s_VAVout`sensor~x_delta )


Component 47
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 3  
  Normal variable(s) : 3  
  Break variable(s)  : 0  

  Solution sequence : 
        s_VAVout~NONAME8               = s_VAVout`quot2`op.safprod__c( s_VAVout~x_sensor, s_VAVout~NONAME6 )
        VAVHCTAirLvgSensor             = s_VAVout`sum2.sum__c( s_VAVout~NONAME8, s_VAVout~NONAME4 )
        s_rm~NONAME9                   = s_rm`sum3.sum__a( rmSensor_offset, s_rm~NONAME5 )


Component 48
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_rm~offset                    PREDICT_FROM_LINK = s_rm~offset

  Solution sequence : 
[BREAK] s_rm~offset                    <- 0 = s_rm`quot3`op.safprod__residual( s_rm~offset, s_rm~NONAME6, s_rm~NONAME9 )


Component 49
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 3  
  Break variable(s)  : 0  

  Solution sequence : 
        TRoomSS , 
        RmTRoomW                       = Rm.room( VAVHCTAirLvg, VAVHCmAirEnt, RmQSENS, TRoomSSP, MXTOut, UARoom, cRoomAir, Tstep )
        s_rm~NONAME7                   = s_rm`sum1.sum__a( TRoomSS, s_rm~NONAME4 )


Component 50
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_rm~x_real                    PREDICT_FROM_LINK = s_rm~x_real

  Solution sequence : 
[BREAK] s_rm~x_real                    <- 0 = s_rm`quot1`op.safprod__residual( s_rm~x_real, s_rm~NONAME6, s_rm~NONAME7 )


Component 51
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_rm`sensor~x_steadyState      = s_rm`sensor`offsetSum.sum__c( s_rm~x_real, s_rm~offset )


Component 52
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        s_rm`sensor~xdot               PREDICT_FROM_LINK = s_rm`sensor~xdot

  Solution sequence : 
        s_rm~x_sensor                  = [INTEGRATOR] s_rm`sensor`integrator.bfd_formula( s_rm`sensor~x_steadyState, s_rm`sensor~xdot, Tstep )
        s_rm`sensor~x_delta            = s_rm`sensor`xDotSum.sum__a( s_rm`sensor~x_steadyState, s_rm~x_sensor )
[BREAK] s_rm`sensor~xdot               <- 0 = s_rm`sensor`xDotQuot`op.safprod__residual( s_rm`sensor~xdot, rmSensor_timeConstant, s_rm`sensor~x_delta )


Component 53
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        s_rm~NONAME8                   = s_rm`quot2`op.safprod__c( s_rm~x_sensor, s_rm~NONAME6 )
        s_supply~NONAME9               = s_supply`sum3.sum__a( supSensor_offset, s_supply~NONAME5 )


Component 54
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_supply~offset                PREDICT_FROM_LINK = s_supply~offset

  Solution sequence : 
[BREAK] s_supply~offset                <- 0 = s_supply`quot3`op.safprod__residual( s_supply~offset, s_supply~NONAME6, s_supply~NONAME9 )


Component 55
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_supply~NONAME7               = s_supply`sum1.sum__a( VAVHCTAirEnt, s_supply~NONAME4 )


Component 56
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_supply~x_real                PREDICT_FROM_LINK = s_supply~x_real

  Solution sequence : 
[BREAK] s_supply~x_real                <- 0 = s_supply`quot1`op.safprod__residual( s_supply~x_real, s_supply~NONAME6, s_supply~NONAME7 )


Component 57
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_supply`sensor~x_steadyState  = s_supply`sensor`offsetSum.sum__c( s_supply~x_real, s_supply~offset )


Component 58
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        s_supply`sensor~xdot           PREDICT_FROM_LINK = s_supply`sensor~xdot

  Solution sequence : 
        s_supply~x_sensor              = [INTEGRATOR] s_supply`sensor`integrator.bfd_formula( s_supply`sensor~x_steadyState, s_supply`sensor~xdot, Tstep )
        s_supply`sensor~x_delta        = s_supply`sensor`xDotSum.sum__a( s_supply`sensor~x_steadyState, s_supply~x_sensor )
[BREAK] s_supply`sensor~xdot           <- 0 = s_supply`sensor`xDotQuot`op.safprod__residual( s_supply`sensor~xdot, supSensor_timeConstant, s_supply`sensor~x_delta )


Component 59
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 2  
  Break variable(s)  : 0  

  Solution sequence : 
        s_supply~NONAME8               = s_supply`quot2`op.safprod__c( s_supply~x_sensor, s_supply~NONAME6 )
        s_mx~NONAME7                   = s_mx`sum1.sum__a( MXTMixReal, s_mx~NONAME4 )


Component 60
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 1  
  Normal variable(s) : 0  
  Break variable(s)  : 1  
        s_mx~x_real                    PREDICT_FROM_LINK = s_mx~x_real

  Solution sequence : 
[BREAK] s_mx~x_real                    <- 0 = s_mx`quot1`op.safprod__residual( s_mx~x_real, s_mx~NONAME6, s_mx~NONAME7 )


Component 61
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 1  
  Normal variable(s) : 1  
  Break variable(s)  : 0  

  Solution sequence : 
        s_mx`sensor~x_steadyState      = s_mx`sensor`offsetSum.sum__c( s_mx~x_real, s_mx~offset )


Component 62
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : STRONG
  Object(s)          : 3  
  Normal variable(s) : 2  
  Break variable(s)  : 1  
        s_mx`sensor~xdot               PREDICT_FROM_LINK = s_mx`sensor~xdot

  Solution sequence : 
        s_mx~x_sensor                  = [INTEGRATOR] s_mx`sensor`integrator.bfd_formula( s_mx`sensor~x_steadyState, s_mx`sensor~xdot, Tstep )
        s_mx`sensor~x_delta            = s_mx`sensor`xDotSum.sum__a( s_mx`sensor~x_steadyState, s_mx~x_sensor )
[BREAK] s_mx`sensor~xdot               <- 0 = s_mx`sensor`xDotQuot`op.safprod__residual( s_mx`sensor~xdot, mxSensor_timeConstant, s_mx`sensor~x_delta )


Component 63
  Type               : MAIN
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 13 
  Normal variable(s) : 26 
  Break variable(s)  : 0  

  Solution sequence : 
        s_mx~NONAME8                   = s_mx`quot2`op.safprod__c( s_mx~x_sensor, s_mx~NONAME6 )
        MXTmixSensor                   = s_mx`sum2.sum__c( s_mx~NONAME8, s_mx~NONAME4 )
        TSupMea                        = s_supply`sum2.sum__c( s_supply~NONAME8, s_supply~NONAME4 )
        current                        = t.time_Currenttime( last, timeScale )
        TRoomSensor                    = s_rm`sum2.sum__c( s_rm~NONAME8, s_rm~NONAME4 )
        FltmAirEnt , 
        FltpreDrop                     = fi.Filter( FanmAirLvg, FltBadDPSensor, FltLeakyFilter, FltPartlyClogged )
        VAVHCwAirLvg                   = VAVHC`HX`eq2.equal__b( VAVHCwAirEnt )
        VAVHCTLiqLvgCoil               = VAVHC`HX`ex`cd2.cond_T2( VAVHC`HX`ex~NONAME8, VAVHCTLiqEntCoil, VAVHC`HX~capLiq )
        VAVHCTLiqBypass , 
        VAVHCTLiqEntValve , 
        VAVHCTLiqLvgValve , 
        VAVHCmLiqLvgCoil , 
        VAVHCmLiqBypass , 
        VAVHCmLiqLvgValve , 
        VAVHCmLiqEntValve              = VAVHC`ho.coil_mixing( VAVHCTLiqEntCoil, VAVHCTLiqLvgCoil, VAVHC~mLiqOpenReal, VAVHCmLiqEntCoil )
        VAVHCmAirLvg                   = VAVHC`HX`eq1.equal__b( VAVHCmAirEnt )
        CCTLiqBypass , 
        CCTLiqEntValve , 
        CCTLiqLvgValve , 
        CCmLiqLvgCoil , 
        CCmLiqBypass , 
        CCmLiqLvgValve , 
        CCmLiqEntValve                 = CC`co.coil_mixing( chillEvapOutletTemp, chillEvapInletTemp, CC~mLiqOpenReal, CCmLiqEntCoil )
        CCqLat                         = CC`ab.abs1__c( CC~qLat1 )
        CCmAirLvg                      = CC`cc`eq.equal__b( FanmAirLvg )


Component 64
  Type               : SINK
  Mode               : TIME_VARYING
  Strength           : WEAK
  Object(s)          : 2  
  Normal variable(s) : 0  
  Break variable(s)  : 0  

  Solution sequence : 
        [SINK] S.runcontrol( SPARKStatus )
        [SINK] W.FileWrite( FanmAirLvg, CCmAirLvg, HCmLiqBypass, HCmLiqEntCoil, HCmLiqEntValve, HCmLiqLvgCoil, Boiler_mdot_locked, HCpos, HCposReal, Boiler_Load_req, HCTAirEnt, CCTAirEnt, HCTLiqBypass, HCTLiqEntValve, HCTLiqLvgCoil, HCTLiqLvgValve, VAVHCTAirEnt, TSupSet, HCTwAirEnt, CCTwAirEnt, HCwAirEnt, CCwAirEnt, FanmAirLvg, CCmAirLvg, CCmLiqBypass, CCmLiqEntCoil, CCmLiqEntValve, CCmLiqLvgCoil, CCmLiqLvgValve, CCpos, CCposReal, CCqLat, CCqSen, CCqTot, CCTAirEnt, FanTAirEnt, CCTLiqBypass, CCTLiqEntValve, chillEvapInletTemp, CCTLiqLvgValve, VAVHCTAirEnt, TSupSet, CCTwAirEnt, FanTwAirEnt, CCwAirEnt, FanwAirEnt, CCwAirEnt, FaneffShaft, FanmAirLvg, FannCon, fanspeed, Fanp, FanpowerTot, FanpStatMea, FanpStatSS, FanTAirEnt, VAVHCTAirEnt, FanpStatSensorReal, FanTwAirEnt, VAVHCTwAirEnt, FanwAirEnt, VAVHCwAirEnt, MXEAPosDamper, MXEAPosDamperReal, MXOAPosDamper, MXOAPosDamperReal, MXPos, MXRAPosDamper, MXRAPosDamperReal, uHeatCoolPrevLev, MXTMixReal, uHeatCoolU, MXTmixSensor, TSupSet, HeatCoolPIiP, HeatCoolPIi, TRoomSS, VAVDAMPosReal, VAVCFMReal, VAVCFMReal, VAVCFMSP, VAVHCmAirEnt, VAVHCmAirLvg, VAVHCmLiqBypass, VAVHCmLiqEntCoil, VAVHCmLiqEntValve, VAVHCmLiqLvgCoil, VAVHCmLiqLvgValve, VAVHCpos, VAVHCposReal, TRoomSensorP, VAVHCTAirEnt, VAVHCTAirLvgSensor, VAVHCTLiqBypass, VAVHCTLiqEntValve, VAVHCTLiqLvgCoil, VAVHCTLiqLvgValve, TRoomSS, VAVHCTwAirEnt, VAVHCTwAirLvg, VAVHCwAirEnt, VAVHCwAirLvg, VAVHCmAirEnt, VAVDAMPosReal, FanpStatSS, FltmAirEnt, FanmAirLvg, FltpreDrop, FanmAirLvg, RmTRoomW, TSupMea, TRoomSensor, TSupMea, VAVHCTAirEnt, uHeatCoolCurLev, timestep, step, HCTLiqLvgValve, Boiler_mdot_locked, Boiler_T_outlet, Boiler_FuelUsed, Boiler_Qdot, chillEvapOutletTemp, chillEvapInletTemp, CCmLiqOpen, chillCondOutletTemp, chillCompPower, chillPumpPower, chillCoolingPower, chillCondInletTemp, CTqTot )



