package com.mcquilleninteractive.learnhvac.model
{
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.mcquilleninteractive.learnhvac.event.ScenarioDataLoadedEvent;
	import com.mcquilleninteractive.learnhvac.util.Logger;
	
	[Bindable]
	public class EPlusRunsModel
	{
		
		public static var RUN_1:String = "eplus_run1"
		public static var RUN_2:String = "eplus_run2"
		public var currRunID:String	= EPlusRunsModel.RUN_1;		//current run as selected by user
		
		public var run1Loaded:Boolean = false;
		public var run2Loaded:Boolean = false
		
		public var eplusRuns:Array  // holds instances of EPlusDataOutput, each of which can hold data from an E+ run
	
		public var dateTimeID:String = "Date/Time"
		public var continueParsing:Boolean = true//flag for when user selects cancel
		private var firstTick:Number //epoch milliseconds for first time data point
		
		
		public function EPlusRunsModel()
		{
			initialize()
		}
		
		public function onUnitsChange(units:String):void
		{
			for each (var epData:EPlusData in eplusRuns)
			{
				epData.unitsRefresh()
			}
		}
		
		public function initialize():void
		{
			
			//currently we're just storing two runs for EPlus, a base run and a delta run
			//later we will allow multiple runs to be held in memory and accessed by user
			eplusRuns = []
			eplusRuns[EPlusRunsModel.RUN_1] = new EPlusData(this)
			eplusRuns[EPlusRunsModel.RUN_2] = new EPlusData(this)						
		}
		
		/* This function loads the two main files generated by an E+ run*/
		
		public function loadEPlusOutput(outputCSV:String, meterDataCSV:String, runID:String):Boolean
		{
			
			Logger.debug("loadEPlusOutput() loading regular and meter data for runID: " + runID, this)
				
			// error check...simplest way right now to check if this is an E+ output file
			// is to see if the first few characters match what E+ writes out on the first line
			var firstLine:String = outputCSV
			if (firstLine.slice(0,9)!="Date/Time")
			{
				Logger.error("loadEPlusOutput: the output file selected by the user doesn't appear to be a valid Learn HVAC E+ output file.", this)
				return false	
			}			
			
			if (eplusRuns[runID]==undefined)
			{
				Logger.error("loadEPlusOutput: no model with id: " + runID, this)
				//create new model if ID doesn't exist
				eplusRuns[runID] = new EPlusData(this)
			}
		
			var eplusData:EPlusData = EPlusData(eplusRuns[runID])
			
			//try
			//{
				eplusData.loadData(outputCSV, meterDataCSV)
			//}
			//catch(e:Error)
			//{
			//	Logger.error("loadEPlusOutput() error: " + e)
			//}
			//launch event
			var cgEvent:ScenarioDataLoadedEvent = new ScenarioDataLoadedEvent(ScenarioDataLoadedEvent.EVENT_EPLUS_DATA_PARSED, runID, IGraphDataModel(eplusData) )
			CairngormEventDispatcher.getInstance().dispatchEvent(cgEvent)
			
			if (runID==EPlusRunsModel.RUN_1) run1Loaded=true
			if (runID==EPlusRunsModel.RUN_2) run2Loaded=true
			
			return true		
		}
		
		/* This function loads E+ data saved by Learn HVAC (E+ outputs two files,
		   but we save as one. So, when loading only need to parse one file */
			
		public function loadEPlusOutputFromFile(outputCSV:String, runID:String):Boolean
		{
			// error check...simplest way right now to check if this is a DRQAT output file
			// is to see if the first few characters match what DRQAT writes out on the first line
			var firstLine:String = outputCSV
			if (firstLine.slice(0,9)!="Date/Time")
			{
				Logger.error("loadEPlusOutputFromFile: the output file selected by the user doesn't appear to be a valid Learn HVAC E+ output file.", this)
				return false	
			}			
			
			if (eplusRuns[runID]==undefined)
			{
				Logger.error("loadEPlusOutputFromFile: no model with id: " + runID, this)
				//create new model if ID doesn't exist
				eplusRuns[runID] = new EPlusData(this)
			}
		
			var eplusData:EPlusData = EPlusData(eplusRuns[runID])
			
			try
			{
				eplusData.loadData(outputCSV)
			}
			catch(e:Error)
			{
				Logger.error("loadEPlusOutputFromFile() error: " + e, this)
			}
			//launch event
			var cgEvent:ScenarioDataLoadedEvent = new ScenarioDataLoadedEvent(ScenarioDataLoadedEvent.EVENT_EPLUS_DATA_PARSED, runID, IGraphDataModel(eplusData) )
			CairngormEventDispatcher.getInstance().dispatchEvent(cgEvent)
			
			if (runID==EPlusRunsModel.RUN_1) run1Loaded=true
			if (runID==EPlusRunsModel.RUN_2) run2Loaded=true
			
			return true		
		}
		
		
		public function getEPlusData(runID:String):EPlusData
		{
			Logger.debug("getEPlusData() runID: " + runID)
			if (eplusRuns[runID]==undefined)
			{
				Logger.warn("#EPlusModel: getEPlusData() runID: " +runID+" not found", this)
				return null
			}
			Logger.debug("getEPlusData() returning : " + EPlusData(eplusRuns[runID]), this)
			return EPlusData(eplusRuns[runID])
		}
		
		
		
		
	}
}