<?xml version="1.0" encoding="utf-8"?>
<mx:VBox width="100%" height="100%"
	 	xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:yahoo="http://www.yahoo.com/astra/2006/mxml"
		visible="false"
	    paddingLeft="10"
	    paddingRight="10"
	    paddingTop="10"
	    backgroundAlpha="1"
	    backgroundColor="#FFFFFF"
	    
		>
		
		<mx:Script>
			<![CDATA[
				
			import com.mcquilleninteractive.learnhvac.event.LongTermImportEvent;	
			import com.mcquilleninteractive.learnhvac.util.Logger			
			import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel
			import com.mcquilleninteractive.learnhvac.model.ScenarioModel
			import com.mcquilleninteractive.learnhvac.model.ApplicationModel
			import com.mcquilleninteractive.learnhvac.model.EPlusData
			import com.mcquilleninteractive.learnhvac.model.ShortTermSimulationDataModel		
			import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel					
			import com.mcquilleninteractive.learnhvac.event.*
			
			import mx.collections.ArrayCollection
			import mx.controls.dataGridClasses.DataGridColumn			
			import mx.controls.Alert
							
			[Bindable]
			[Autowire]
			public var scenarioModel:ScenarioModel
						
			[Bindable]
			[Embed(source='assets/img/long_term_import_icon.png')]
			public var LongTermImportIcon:Class
					
			private var currentYear:Number = new Date().fullYear;
			private var _currSelectedIndex:Number  //used to roll back selection if run doesn't exist
			private var _selectedRun:String
						
						
			[Mediate(event="ScenarioLoadedEvent.SCENARIO_LOADED")]
			public function onScenarioLoaded(event:ScenarioLoadedEvent):void
			{
				setDateTime()
				reset()
			}
			
			[Mediate(event="ShortTermSimulationEvent.SIM_STARTED")]
			public function onShortTermSimulationStarted(event:ShortTermSimulationEvent):void
			{
				cboRun.enabled = false
				timeStepper.enabled = false
				dateField.enabled = false
				cboLongTermRun.enabled = false
				this.cboFloor.enabled = false
				this.cboZone.enabled = false
			}
			
			[Mediate(event="ShortTermSimulationEvent.SIM_STARTED")]
			public function onShortTermSimulationStopped(event:ShortTermSimulationEvent):void
			{
				cboRun.enabled = true
				timeStepper.enabled = true
				dateField.enabled = true
				cboLongTermRun.enabled = true	
				this.cboFloor.enabled = true
				this.cboZone.enabled = true
			}
			
			
			public function onOutputLoaded(event:CairngormEvent):void
			{
				
			}
			
			public function reset():void
			{				
				dgLongTermSimImportVars.dataProvider = new ArrayCollection()
				
				scenarioModel.shortTermSimulationDataModel.currRunID = ShortTermSimulationDataModel.RUN_1
				cboRun.selectedIndex = 0
				
			}
								
			public function dateLabel(item:Object,column:DataGridColumn):String
			{
				return dateFormat.format(item[column.dataField]);
			}
					
			public function addTempMarkerToLabel(item:Object, column:DataGridColumn):String
			{
				return String(item[column.dataField]) + ApplicationModel.currentTempUnits()
			}

			public function formatValue(item:Object, column:DataGridColumn):String 
			{
				return fmtRoundToTwoDecimals.format(item.currValue);
			}

			//make sure correct run is set
			protected function onRunChange():void
			{
				scenarioModel.shortTermSimulationDataModel.currRunID = cboRun.selectedItem.data
			}
						
			
			public function setDateTime():void
			{
				var scenarioModel:ScenarioModel = scenarioModel
				
				if (scenarioModel==null) return				
				Logger.debug("#VizPanelInfo: setting date time from model: " + scenarioModel.realtime_start_datetime)
				timeStepper.value = scenarioModel.realtime_start_datetime
				dateField.selectedDate = scenarioModel.realtime_start_datetime
				timeStepper.enabled = scenarioModel.allow_realtime_datetime_change
				dateField.enabled = scenarioModel.allow_realtime_datetime_change
				
				//change toolTip to help user understand disabled
				if (scenarioModel.allow_realtime_datetime_change)
				{
					timeStepper.toolTip = "Select the start time for the real-time simulation"
					dateField.toolTip = "Select the start date for the real-time simulation"
				}
				else
				{
					timeStepper.toolTip = "The instructor has disabled the time field for this scenario"
					dateField.toolTip = "The instructor has disabled the date field for this scenario"
				}
			}
	
			
				
			private function updateSimulationStartDateAndTime():void
			{
				Logger.debug("updateSimulationStartDateAndTime()",this)
								
				var scenarioModel:ScenarioModel = scenarioModel					
				var selectedDate:Date = this.dateField.selectedDate
				
				
				if (selectedDate.fullYear != currentYear) 
				{
					Alert.show("Selected date must be in current year ("+currentYear+")", "Illegal Date")
					return
				}
				
				//copy hours and minutes into time 
				var selectedTime:Date = this.timeStepper.value				
				selectedDate.hours = selectedTime.hours
				selectedDate.minutes = selectedTime.minutes
				
				Logger.debug("selectedDate: " + selectedDate.toString(), this)
				
				scenarioModel.setRealTimeStartDate(selectedDate)	
				
							
			}
			
			protected function onZoneChange():void
			{
				var scenarioModel:ScenarioModel = scenarioModel
				scenarioModel.zoneOfInterest = cboZone.selectedItem.data
			}
	
			protected function onFloorChange():void
			{
				scenarioModel.floorOfInterest = cboFloor.selectedItem.data			
			}
			
			
			
			public function changeLongTermRunImport():void
			{
				var epRunsModel:LongTermSimulationDataModel = scenarioModel.longTermSimulationDataModel
				var selectedRun:String = cboLongTermRun.selectedItem.data
				
				switch (selectedRun)
				{
					case ScenarioModel.LT_IMPORT_NONE:
						scenarioModel.importLongTermVarsFromRun = ScenarioModel.LT_IMPORT_NONE
						reset()
						break
						
					case LongTermSimulationDataModel.RUN_1:
						
						if (epRunsModel.run1Loaded)
						{
							scenarioModel.importLongTermVarsFromRun = LongTermSimulationDataModel.RUN_1	
							var epData:EPlusData = scenarioModel.longTermSimulationDataModel.getEPlusData(LongTermSimulationDataModel.RUN_1)
							scenarioModel.getLongTermExportSysVars()
							dgLongTermSimImportVars.dataProvider = scenarioModel.sysVarsImportedFromLongTermAC
							
						}
						else
						{					
							Alert.show("Long-term Simulation Run 1 has not yet been completed.", "No Data")
							cboLongTermRun.selectedIndex = _currSelectedIndex
							reset()
							return
						}
						break
						
					case LongTermSimulationDataModel.RUN_2:
											
						if (epRunsModel.run2Loaded)
						{
							scenarioModel.importLongTermVarsFromRun = LongTermSimulationDataModel.RUN_1	
							epData = scenarioModel.longTermSimulationDataModel.getEPlusData(LongTermSimulationDataModel.RUN_2)		
							scenarioModel.getLongTermExportSysVars()
							dgLongTermSimImportVars.dataProvider = scenarioModel.sysVarsImportedFromLongTermAC
						}
						else
						{
							Alert.show("Long-term Simulation Run 2 has not yet been completed.",  "No Data")
							cboLongTermRun.selectedIndex = _currSelectedIndex
							reset()
							return
						}
						break
									
				}
				
				_currSelectedIndex = cboLongTermRun.selectedIndex
	
				//dispatch an event that the import run has changed (this will update icons in the input panels)
				var evt:LongTermImportEvent = new LongTermImportEvent(LongTermImportEvent.RUN_CHANGED)
				evt.runToImport = scenarioModel.importLongTermVarsFromRun
				CairngormEventDispatcher.getInstance().dispatchEvent(evt)
				
						
			}
		
			
		]]>
		

		</mx:Script>
		
		
		
		
		
		<mx:HBox>
			<mx:Label text="Store results as"  width="100"  paddingTop="3"/>
			<mx:ComboBox id="cboRun" 
				selectedIndex="0"  
				toolTip="Store your simulation results as 'Run1' or 'Run2'"
				change="onRunChange()">
				<mx:dataProvider>
					<mx:ArrayCollection>
						<mx:Object label="Run 1" data="{ShortTermSimulationDataModel.RUN_1}"/>
						<mx:Object label="Run 2" data="{ShortTermSimulationDataModel.RUN_2}"/>
					</mx:ArrayCollection>
				</mx:dataProvider>
			</mx:ComboBox>			
		</mx:HBox>
		
		<mx:Spacer height="10"/>
		<mx:HBox verticalAlign="middle" width="100%">			
			<mx:Image source="{LongTermImportIcon}" />
			<mx:Label text="Long-term Simulation Import"   fontWeight="bold" paddingTop="5"/>			
		</mx:HBox>
				
									
		<mx:HBox width="100%" >				
			<mx:Label text="Run to import:"  width="100"   paddingTop="5"/>
			<mx:ComboBox id="cboLongTermRun" 
				selectedIndex="0"  
				toolTip="Import data from long-term simulation stored in 'Run1' or 'Run2'"
				change="changeLongTermRunImport()">
				<mx:dataProvider>
					<mx:ArrayCollection>
						<mx:Object label="None" data="none"/>
						<mx:Object label="Run 1" data="{LongTermSimulationDataModel.RUN_1}"/>
						<mx:Object label="Run 2" data="{LongTermSimulationDataModel.RUN_2}"/>
					</mx:ArrayCollection>
				</mx:dataProvider>
			</mx:ComboBox>
		</mx:HBox>
		
		
		<mx:Label text="Zone of interest"   fontWeight="bold" paddingTop="5"/>
			
						
			<mx:HBox >
				<mx:Label text="Zone: " width="100"  />
				 <mx:ComboBox id="cboZone" 
					selectedIndex="0"  
					change="onZoneChange()"
					toolTip="Select the zone of interest.">
					<mx:dataProvider>
						<mx:ArrayCollection>
							<mx:Object label="1" data="1"/>
							<mx:Object label="2" data="2"/>
							<mx:Object label="3" data="3"/>
							<mx:Object label="4" data="4"/>
							<mx:Object label="5" data="5"/>
						</mx:ArrayCollection>
					</mx:dataProvider>
				</mx:ComboBox>		
			</mx:HBox>
			
			<mx:HBox>		
				<mx:Label text="Floor: " width="100"  />
				<mx:ComboBox id="cboFloor" 
					selectedIndex="0"  
					change="onFloorChange()"
					toolTip="Select the floor of interest.">
					<mx:dataProvider>
						<mx:ArrayCollection>
							<mx:Object label="Bottom" data="1"/>
							<mx:Object label="Middle" data="2"/>
							<mx:Object label="Top" data="3"/>
						</mx:ArrayCollection>
					</mx:dataProvider>
				</mx:ComboBox>	
			</mx:HBox>
		
					
		<mx:Label text="Start date/time"   fontWeight="bold" paddingTop="5"/>
										
		<mx:HBox >
			<mx:Label text="Time: "  width="100" />
			<yahoo:TimeStepper id="timeStepper" 
		    	showSeconds="false" 
		    	change="updateSimulationStartDateAndTime()"
		        width="70"
		        styleName="simTimeStepper"
		        toolTip="Start time for the short-term simulation"
		        />
			<mx:Label text="Date:" />
		    <mx:DateField id="dateField" 
		    	change="updateSimulationStartDateAndTime()"
		        toolTip="Start date for the short-term simulation"	
		        styleName="simDatePicker"
		    	/>
	    </mx:HBox>
		
		
		
		
		<mx:Label text="Variables imported"   fontWeight="bold" paddingTop="5"/>
		
		<mx:DateFormatter id="dateFormat" formatString="EEE MM/DD J:NN"/>	
		<mx:NumberFormatter id="fmtRoundToTwoDecimals" precision="2" />			
		
								
		<mx:DataGrid id="dgLongTermSimImportVars"				
				width="325" height="120"
				paddingTop="0"
  				dragEnabled="true"
  				dropEnabled="false"
				selectable="false"
  				>
			<mx:columns>
				<mx:DataGridColumn headerText="Name" dataField="display_name" minWidth="200" />
				<mx:DataGridColumn headerText="Value" minWidth="50" dataField="currValue" labelFunction="formatValue" />
				<mx:DataGridColumn headerText="Units" minWidth="50" dataField="units"  />
			</mx:columns>	
		</mx:DataGrid>
		<mx:Label text="NOTE: Values will update when simulation is running."/>
		
					
		
</mx:VBox>

