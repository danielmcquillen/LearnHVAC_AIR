<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 	xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:util="com.adobe.ac.util.*" 
			xmlns:head="com.mcquilleninteractive.learnhvac.view.layout.*"
			xmlns:importControls = "com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.*"
			initialize="onInitialize(event)"
			creationComplete="onCreationComplete()"
		    verticalGap="0"
		    styleName="glassPods"	
			horizontalScrollPolicy="off"
			verticalScrollPolicy="off"
		    
			>
				
	<mx:Script>
		<![CDATA[
			
		import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel;
		import mx.collections.SortField
		import mx.collections.Sort
		import com.mcquilleninteractive.learnhvac.event.VisualizationEvent
		import mx.collections.ArrayCollection
		import com.mcquilleninteractive.learnhvac.model.ApplicationModel
		import com.mcquilleninteractive.learnhvac.model.ScenarioModel
		import com.mcquilleninteractive.learnhvac.model.SystemNodeModel
		import com.mcquilleninteractive.learnhvac.model.SystemVariable
		import com.mcquilleninteractive.learnhvac.util.Logger
		import com.mcquilleninteractive.learnhvac.event.LoadScenarioEvent
		import com.mcquilleninteractive.learnhvac.event.ScenarioLoadedEvent
		import com.mcquilleninteractive.learnhvac.event.ShortTermSimulationEvent
		import com.mcquilleninteractive.learnhvac.event.ResetInputsEvent
		import com.mcquilleninteractive.learnhvac.event.SetUnitsEvent
		import com.mcquilleninteractive.learnhvac.model.SystemNodeModel
		
		import mx.controls.Alert
		import mx.collections.ListCollectionView
		import mx.binding.utils.BindingUtils
		import mx.events.ItemClickEvent;
        import mx.controls.TabBar;
				

		[Bindable]
		[Autowire]
		public var scenarioModel:ScenarioModel

		private var INPUTS_PANEL : Number = 0
		private var FAULTS_PANEL : Number = 1
		private var LONG_TERM_INPUT_PANEL : Number = 2
		private var faultLists:Array 
		private var inputLists:Array
		private var viewState : Number = INPUTS_PANEL
		private var inputPanelsArr:ArrayCollection
		private var faultPanelsArr:ArrayCollection
		private var currSysNodeIndex:Number;
		private var longTermImportsAC:ArrayCollection = new ArrayCollection() //holds sysVars that are being imported from E+
		
		public var inputsErrorMsg:String = "";
		
		[Bindable]
		private var _listPadding:Number = 36;
		 			
		public function onInitialize(event:Event):void
		{		
		}
		
		public function onCreationComplete():void
		{
			inputLists = []
			inputLists[ScenarioModel.SN_CC] = lstInputItemsCC
			inputLists[ScenarioModel.SN_HC] = lstInputItemsHC
			inputLists[ScenarioModel.SN_FAN] = lstInputItemsFAN
			inputLists[ScenarioModel.SN_VAV] = lstInputItemsVAV
			inputLists[ScenarioModel.SN_MIXINGBOX] = lstInputItemsMX
			inputLists[ScenarioModel.SN_FILTER] = lstInputItemsFLT
			inputLists[ScenarioModel.SN_SYSTEM] = lstInputItemsSYS
			inputLists[ScenarioModel.SN_DIFFUSER] = lstInputItemsDIF
			inputLists[ScenarioModel.SN_BOILER] = lstInputItemsBOI
			inputLists[ScenarioModel.SN_CHILLER] = lstInputItemsCHL
			inputLists[ScenarioModel.SN_COOLINGTOWER] = lstInputItemsCTW
			inputLists[ScenarioModel.SN_PLANT] = lstInputItemsPLT
			inputLists[ScenarioModel.SN_RM] = lstInputItemsRM
			inputLists[ScenarioModel.SN_DCT] = lstInputItemsDCT
			
			faultLists = []			
			faultLists[ScenarioModel.SN_CC] = lstFaultItemsCC
			faultLists[ScenarioModel.SN_HC] = lstFaultItemsHC
			faultLists[ScenarioModel.SN_FAN] = lstFaultItemsFAN
			faultLists[ScenarioModel.SN_VAV] = lstFaultItemsVAV
			faultLists[ScenarioModel.SN_MIXINGBOX] = lstFaultItemsMX
			faultLists[ScenarioModel.SN_FILTER] = lstFaultItemsFLT
			faultLists[ScenarioModel.SN_SYSTEM] = lstFaultItemsSYS
			faultLists[ScenarioModel.SN_DIFFUSER] = lstFaultItemsDIF
			faultLists[ScenarioModel.SN_BOILER] = lstFaultItemsBOI
			faultLists[ScenarioModel.SN_CHILLER] = lstFaultItemsCHL
			faultLists[ScenarioModel.SN_COOLINGTOWER] = lstFaultItemsCTW
			faultLists[ScenarioModel.SN_PLANT] = lstFaultItemsPLT
			faultLists[ScenarioModel.SN_RM] = lstFaultItemsRM
			faultLists[ScenarioModel.SN_DCT] = lstFaultItemsDCT
			
			
		}
		
		[Mediate(event="ScenarioLoadedEvent.SCENARIO_LOADED")]
		public function onScenarioLoaded(event:ScenarioLoadedEvent):void
		{
			Logger.debug("onScenarioLoaded()",this)
			buildInputPanels()
		}
		
		[Mediate(event="ShortTermSimulationEvent.SIM_STARTED")]
		public function onShortTermSimStart(event:ShortTermSimulationEvent):void
		{
			btnUpdate.enabled = true	
		}
		
		[Mediate(event="ShortTermSimulationEvent.SIM_STOPPED")]
		public function onShortTermSimStop(event:ShortTermSimulationEvent):void
		{
			btnUpdate.enabled = false
		}
		
		
		public function clearInputPanel():void
		{
			Logger.debug("#InputPanel: clearInputPanel()")
			//clear out all inputs
			for (var listName:String in inputLists)
			{
				List(inputLists[listName]).dataProvider = null
			}
			for (listName in faultLists)
			{
				List(faultLists[listName]).dataProvider = null
			}
		}
		
		
		
		public function filterInputPanel(item:Object):Boolean 
		{
			return 	item.ioType=="INPUT" && 
					item.viewType=="PUBLIC" && 
					item.isFault == false
		}
		
		public function filterFaultPanel(item:Object):Boolean 
		{
			return 	item.ioType=="INPUT" && 
					item.viewType=="PUBLIC" && 
					item.isFault == true
		}
		
		public function buildInputPanels():void
		{			
       	  	inputPanelsArr = new ArrayCollection()
       	  	faultPanelsArr = new ArrayCollection()
			
			for each (var sysNode:SystemNodeModel in scenarioModel.sysNodesAC)
			{							
				//assign each systemNodeModel's sysVarsArr to a respective list control
				var sysNodeID:String = sysNode.id
				var inputList:List = this["lstInputItems"+sysNodeID]
				
				//add filter function for input panel
				var sysVarArrView:ListCollectionView = new ListCollectionView(sysNode.sysVarsArr)
				sysVarArrView.filterFunction = filterInputPanel
				inputList.dataProvider = sysVarArrView
				sysVarArrView.refresh()
				inputPanelsArr.addItem(inputList)
				
				//add filter function for fault panel
				var faultList:List = this["lstFaultItems"+sysNodeID]
				var sysVarFaultArrView:ListCollectionView = new ListCollectionView(sysNode.sysVarsArr)
				sysVarFaultArrView.filterFunction = filterFaultPanel
				faultList.dataProvider = sysVarFaultArrView
				
				//sort by subsection
				var faultListSort:Sort = new Sort()
				faultListSort.fields = [new SortField("subsection")]
				sysVarFaultArrView.refresh()
				faultPanelsArr.addItem(faultList)
				
			}
			
			//build comboBox
			cboSysNode.dataProvider = scenarioModel.sysNodesAC
			
		}
		
		protected function comboNodeSelect(event:Event):void
		{	
			var selectedIndex:Number = event.target.selectedIndex;
			if (selectedIndex == currSysNodeIndex) return;
			currSysNodeIndex = selectedIndex
			Logger.debug("updating input panel view: " + cboSysNode.selectedItem.id, this)
			setInputPanelView(cboSysNode.selectedItem.id)		
		}
		
		
		/** updates the input panel to show the inputs for specified sysNode
		 *  this function is used by exterior controls that want to 
		 *  change the state of the input panel */
		public function updateInputPanelView(newSysNode:String):void
		{
			if (cbxSyncToNav.selected)
			{	
				setInputPanelView(newSysNode)				
			}									
			Logger.debug("updateInputPanelView() newSysNode: " + newSysNode, this)
			//turn on panel for currently selected tab
							
			
		}
		
		protected function setInputPanelView(newSysNode:String):void
		{		
			//turn off all panels
			for (var name:String in inputLists) inputLists[name].visible = false
			for (name in faultLists) faultLists[name].visible = false
		
			if (viewState == FAULTS_PANEL)
			{
				faultLists[newSysNode].visible = true
			}
			else if (viewState== INPUTS_PANEL)
			{
				inputLists[newSysNode].visible = true	
			}						
		}
		
		public function onCurrNodeIndexChange():void
		{
			Logger.debug("#InputPanel: onCurrNodeIndexChange() called")
			if (cbxSyncToNav.selected)
			{
				//update the combo box
				cboSysNode.selectedIndex = scenarioModel.currNodeIndex
				//update the subpanels
				updateInputPanelView(scenarioModel.currNode)
			}
		}
		
		public function tabClickHandler(event:ItemClickEvent):void{
			
			Logger.debug("#tabClick() viewState = " + viewState)
			
			
			switch (event.label)
			{
				case "RUN OPTIONS":
					viewState = LONG_TERM_INPUT_PANEL
					optionsPanel.visible = true
					inputsAndFaults.visible = false
					break
					
				case "INPUTS":
					Logger.debug("changing to inputs view")
					viewState = INPUTS_PANEL
					optionsPanel.visible = false
					inputsAndFaults.visible = true
					inputPanelsArr.getItemAt(currSysNodeIndex).visible = true
					faultPanelsArr.getItemAt(currSysNodeIndex).visible = false
					break
					
				case "FAULTS":
					Logger.debug("changing to faults view")
					viewState = FAULTS_PANEL
					optionsPanel.visible = false
					inputsAndFaults.visible = true
					inputPanelsArr.getItemAt(currSysNodeIndex).visible = false
					faultPanelsArr.getItemAt(currSysNodeIndex).visible = true
					break
										
				
					
				default:
					
			}						
			
		}
	
		
		
		public function resetToInitial():void
		{
			dispatchEvent( new ResetInputsEvent(ResetInputsEvent.RESET_SHORT_TERM_INPUTS_TO_INITIAL_VALUES, true))			
		}
				
		public function areInputsValid():Boolean
		{	
			Logger.debug("areInputsValid()",this)
			inputsErrorMsg = "" 
			
			var inputSysVarsArr:Array = scenarioModel.getInputSysVars()
			
			for each (var sysVar:SystemVariable in inputSysVarsArr)
			{
				if (sysVar.isLocalValueValid()==false)
				{
					Logger.debug("Local value for sysVar: " + sysVar.name + " is invalid", this)
					if (inputsErrorMsg == "")
					{
						inputsErrorMsg = "Some of your input values are out-of-bounds. Please check the following components and make sure their values are within the minimum and maximum allowed: \n "
					}
					inputsErrorMsg = inputsErrorMsg + "\n  - " + sysVar.displayName
					break
				}
			}		
			
			// INPUT CHECKS
			// Do any input checks here and prevent submit if user has strange combinations
			
			// TODO : Make sure heating set point's max is cooling set point	
			
			
			// CHECK OPTIONS
			if (this.optionsPanel.isValid==false)
			{
				inputsErrorMsg = optionsPanel.errorMsg
				return false
			}
						
			if (inputsErrorMsg!="") return false //show this first set of problems if they exist
			
			//ask all input vars to update
			for each (sysVar in inputSysVarsArr)
			{
				sysVar.updateFromLocal()
			}
											
			return true
			
		}
		
		public function onUpdateSimulation():void
		{
			if (areInputsValid()==true)
			{	
				optionsPanel.commit()							
				var event : ShortTermSimulationEvent = new ShortTermSimulationEvent(ShortTermSimulationEvent.SIM_UPDATE, true);
				dispatchEvent(event);
			}
			else
			{
				mx.controls.Alert.show(inputsErrorMsg, "Input Errors");
			}
		}
				

		]]>
	</mx:Script>
	
	<head:GlassHeaders headerTitle="SIMULATION CONTROLS"/>
	
	<mx:TabBar itemClick="tabClickHandler(event);"  
		styleName="tabNavigator"
		paddingBottom="0"
		borderStyle="none" 
	   
		>
		<mx:dataProvider>
           	<mx:String>RUN OPTIONS</mx:String>
       		<mx:String>INPUTS</mx:String>
           	<mx:String>FAULTS</mx:String>
        </mx:dataProvider>
   	</mx:TabBar>
   	 
   	 
	<mx:Canvas 		 height="453" 
					 width="100%" 
					 horizontalScrollPolicy="off" 
					 verticalScrollPolicy="off"
					 paddingBottom="10">
   	 
   	
	<importControls:ShortTermOptions id="optionsPanel" visible="true"/> 
   	 
				     
	<mx:Canvas id="inputsAndFaults"
					 height="453" 
					 width="100%" 
					 horizontalScrollPolicy="off" 
					 verticalScrollPolicy="off"
					 paddingBottom="10"
					 visible = "false"
					 >
					 
				<mx:HBox 
					id="headerControls"
					paddingTop="7"
					paddingLeft="5" 
				    borderStyle="none"
					width="100%" 
					height="35"
					backgroundColor="0xFFFFFF" >
					
					<mx:ComboBox id="cboSysNode"
							paddingLeft="10"
							labelField="name" 
							rowCount="9"
							change="comboNodeSelect(event)" 
							/>
					
					<mx:Spacer width="85"/>
					<mx:Label id="lblSyncToNav" text="Sync to nav:" toolTip="When you navigate to a part of the HVAC system, make this panel automatically switch to the relevant values."/>
					<mx:CheckBox id="cbxSyncToNav" toolTip="When you navigate to a part of the HVAC system, make this panel automatically switch to the relevant values."/>
				</mx:HBox>	 
					 
				<!-- SYS Inputs-->
				<mx:List 	id="lstInputItemsSYS" 
						y="{_listPadding}"
						name="System"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>			
				
				<!-- MX Inputs-->
				<mx:List 	id="lstInputItemsMX"
						y="{_listPadding}"
						name="Mixing Box"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>		
						
				<!-- Fan Inputs-->
				<mx:List 	id="lstInputItemsFAN"
						y="{_listPadding}"
						name="Fan"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>	
							
				<!-- Flt Inputs-->
				<mx:List 	id="lstInputItemsFLT"
						y="{_listPadding}"
						name="Filter"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>
				
				
				<!-- Heating Coil Inputs-->
				<mx:List 	id="lstInputItemsHC"
						y="{_listPadding}"
						paddingTop="0"
						name="Heating Coil"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						width="100%" 
						height="418" 
   					    visible="false"
   					    styleName="inputList"
   					    selectable="false"
						/>
						
				<!-- Cooling Coil Inputs-->
				<mx:List 	id="lstInputItemsCC"
						y="{_listPadding}"
						name="Cooling Coil"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>			
			
				<!-- VAV Inputs-->
				<mx:List 	id="lstInputItemsVAV"
						y="{_listPadding}"
						name="VAV"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>		
				
				<!-- DIF Inputs-->
				<mx:List 	id="lstInputItemsDIF"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="380"
   					    visible="false"
   					    styleName="inputList"
						/>	
			
				<!-- PLT Inputs-->
				<mx:List 	id="lstInputItemsPLT"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>	
						
				<!-- BOI Inputs-->
				<mx:List 	id="lstInputItemsBOI"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>		
							
				<!-- CHL Inputs-->
				<mx:List 	id="lstInputItemsCHL"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>									
			
				
				
				<!-- CTW Inputs-->
				<mx:List 	id="lstInputItemsCTW"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>	
						
				<!-- DCT Inputs-->
				<mx:List 	id="lstInputItemsDCT"
						y="{_listPadding}"
						name="Duct"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>	
				
				<!-- RM Inputs-->
				<mx:List 	id="lstInputItemsRM"
						y="{_listPadding}"
						name="Room"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.InputItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="inputList"
						/>	
						
				
				
				
						
				<!-- ************  -->
				<!-- FAULT PANELS  -->
				<!-- ************  -->
				
				<!-- SYS Faults-->
				<mx:List 	id="lstFaultItemsSYS"
						y="{_listPadding}"
						name="System"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>	
					
				<!-- MX Faults-->
				<mx:List 	id="lstFaultItemsMX"
						y="{_listPadding}"
						name="Mixing Box"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>			
						
				<!-- Fan Faults-->
				<mx:List 	id="lstFaultItemsFAN"
						y="{_listPadding}"
						name="Fan"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>
						
				<!-- Flt Faults-->
				<mx:List 	id="lstFaultItemsFLT"
						y="{_listPadding}"
						name="Filter"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>
							
					
				<!-- Heating Coil Faults-->
				<mx:List 	id="lstFaultItemsHC"
						y="{_listPadding}"
						name="Heating Coil"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    borderStyle="none"
   					    styleName="faultList"
						/>
						
				<!-- Cooling Coil Faults-->
				<mx:List 	id="lstFaultItemsCC"
						y="{_listPadding}"
						name="Cooling Coil"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>			
					
				<!-- VAV Faults-->
				<mx:List 	id="lstFaultItemsVAV"
						y="{_listPadding}"
						name="VAV"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%"  
						height="418"
   					    visible="false"
   					    styleName="faultList" 
						/>		
				
				<!-- DIF Faults-->
				<mx:List 	id="lstFaultItemsDIF"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>		
						
				<!-- PLT Faults-->
				<mx:List 	id="lstFaultItemsPLT"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="410"
   					    visible="false"
   					    styleName="faultList"
						/>		
						
				<!-- BOI Faults-->
				<mx:List 	id="lstFaultItemsBOI"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>
						
				<!-- CHL Faults-->
				<mx:List 	id="lstFaultItemsCHL"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>				
						
				<!-- CTW Faults-->
				<mx:List id="lstFaultItemsCTW"
						y="{_listPadding}"
						name="Diffuser"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>	
						
				<!-- RM Faults-->
				<mx:List id="lstFaultItemsRM"
						y="{_listPadding}"
						name="Room"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>	
						
				<!-- DCT Faults-->
				<mx:List id="lstFaultItemsDCT"
						y="{_listPadding}"
						name="Duct"
						itemRenderer="com.mcquilleninteractive.learnhvac.view.shortterm.input_controls.FaultItem"
						alternatingItemColors="[#F1F1F1,#F9F9F9]" 
						selectable="false"
						width="100%" 
						height="418"
   					    visible="false"
   					    styleName="faultList"
						/>	
									
					
			
		</mx:Canvas>
	</mx:Canvas>
	
	
	<mx:Spacer height="5"/>
	<mx:HBox width="100%">
	
		<mx:Spacer width="5"/>
		
		<mx:Button id="btnUpdate"
			label="Update"
			height="25"
			width="110"
			click="onUpdateSimulation()"
			toolTip="Update inputs values for simulation"
			enabled="false"
			/>
			
		<mx:Spacer width="100%"/>
		<mx:LinkButton id="btnReset"
			label="Reset Values"
			click="resetToInitial()"
			toolTip="Reset to initial values"
		/>
			
		
		<mx:Spacer width="5"/>
		
	</mx:HBox>
								
	
	
</mx:VBox>
