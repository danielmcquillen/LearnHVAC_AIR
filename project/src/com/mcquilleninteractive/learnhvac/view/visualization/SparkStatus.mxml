<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:myComps="*"
	width="200" height="170"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
    backgroundAlpha="0"
    creationComplete="onCreationComplete()"
	>
	
	<mx:Script>
		<![CDATA[
					
			import com.adobe.cairngorm.control.CairngormEventDispatcher
			import com.mcquilleninteractive.learnhvac.event.SparkEvent
			import com.mcquilleninteractive.learnhvac.event.AHUEvent
			import com.mcquilleninteractive.learnhvac.business.SparkService	
			
			public function onCreationComplete():void
			{
				//listen for the more generic AHU events to know if SPARK is ON or OFF
				//This might be a problem later...might need to add the more granular
				//SPARK ON and OFF events
				 var dispatcher:CairngormEventDispatcher = CairngormEventDispatcher.getInstance()
				
				dispatcher.addEventListener(SparkEvent.SPARK_ON, onSparkOn)
				dispatcher.addEventListener(SparkEvent.SPARK_OFF, onSparkOff)
				dispatcher.addEventListener(SparkEvent.SPARK_CRASHED, onSparkCrash)
				dispatcher.addEventListener(SparkEvent.SPARK_INTERVAL_TIMEOUT, onSparkCrash)
				dispatcher.addEventListener(SparkEvent.SPARK_STARTUP_TIMEOUT, onSparkCrash)
				
				//this isn't working?...
				var filter1:DropShadowFilter = new DropShadowFilter()
				statusCanvas.filters.push(filter1)			
				
				
			}
		
			public function onSparkOn(event:SparkEvent):void
			{
				//TODO: spin cog
				indicator.gotoAndPlay("running")
				txtStatus.text = "SPARK RUNNING OK"
			}
		
			public function onSparkOff(event:SparkEvent):void
			{
				//TODO: stop cog
				indicator.gotoAndStop("stopped")
				txtStatus.text = "SPARK OFF"
			}
		
			public function onSparkCrash(event:SparkEvent):void
			{
				
				indicator.gotoAndStop("crashed")	
				txtStatus.text =  event.code + " : " + event.msg
			}
			     
		]]>
	</mx:Script>


	<mx:Canvas 
  		 id="statusCanvas"
  		 x="0" y="0"
		 width="199" height="70" 
		 borderColor="0x555555"
		 backgroundColor="0xE1E1E1"
		 backgroundAlpha="1"
		 borderStyle="solid"
		 horizontalScrollPolicy="off"
		 verticalScrollPolicy="off"
		 visible = "false"
		>
		
		<mx:Label text="Spark Status:" x="10" y="2"/>
		
		<mx:TextArea id="txtStatus"
		    paddingLeft="10"
		    borderStyle="dotted"
		    borderColor="0xEEEEEE"
			y="23" 
			width="198" height="47" 
			text="Status : SPARK OFF"/>
			
		
	</mx:Canvas>
	
	<myComps:SparkStatusIndicator id="indicator" 
		x="170" y="0" 
		 mouseOver="{statusCanvas.visible = true}"
		 mouseOut="{statusCanvas.visible = false}"
	/>
	
	
	
</mx:Canvas>
