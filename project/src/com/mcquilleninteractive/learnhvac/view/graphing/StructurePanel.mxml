<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:myComps="*"
			xmlns:graphing="com.mcquilleninteractive.learnhvac.view.graphing.*"
			title="System Variables"
			creationComplete="onCC()" 
			>

	 	<mx:Script>
	 		<![CDATA[
	 		import com.mcquilleninteractive.learnhvac.model.data.*
	 		import com.mcquilleninteractive.learnhvac.model.ApplicationModel	
	 		import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel	
	 		import com.mcquilleninteractive.learnhvac.model.ShortTermSimulationDataModel
	 		import com.mcquilleninteractive.learnhvac.util.Logger
			import mx.collections.XMLListCollection
			import com.mcquilleninteractive.learnhvac.event.ScenarioDataLoadedEvent	
			import mx.managers.DragManager
			import mx.events.DragEvent
			
			
			public function onCC():void
			{
				Logger.debug("StructurePanel created", this)
				
				shortTermRun1.setType(ShortTermSimulationDataModel.RUN_1)
				shortTermRun2.setType(ShortTermSimulationDataModel.RUN_2)
			}
			
			
			[Mediate(event="ScenarioDataLoadedEvent.SHORT_TERM_SYSVARS_LOADED")]
			public function onModelicaDataParsed(event:ScenarioDataLoadedEvent):void
			{				
				var graphDataModel:IGraphDataModel = event.graphDataModel
				
				//for now we're just expecting "run1" and "run2"
				//but later we might want to support multiple models
				
				switch(event.graphDataModelID)
				{
					case ShortTermSimulationDataModel.RUN_1:
						shortTermRun1.loadData(graphDataModel)
						break
					case ShortTermSimulationDataModel.RUN_2:
						shortTermRun2.loadData(graphDataModel)
						break
				}	
				
			}
			
			
			[Mediate(event="ScenarioDataLoadedEvent.ENERGY_PLUS_DATA_PARSED")]
			public function onEPlusDataParsed(evt:ScenarioDataLoadedEvent):void
			{
				var event:ScenarioDataLoadedEvent = ScenarioDataLoadedEvent(evt)
				var graphDataModel:IGraphDataModel = event.graphDataModel
				
				//for now we're just expecting "run1" and "run2"
				//but later we might want to support multiple models
				
				switch(event.graphDataModelID)
				{
					case LongTermSimulationDataModel.RUN_1:
						longTermRun1.loadData(graphDataModel)
						longTermRun1.setType(LongTermSimulationDataModel.RUN_1)
						break
					case LongTermSimulationDataModel.RUN_2:
						longTermRun2.loadData(graphDataModel)
						longTermRun2.setType(LongTermSimulationDataModel.RUN_2)
						break
				}	
				
			}
					
				
		 			
	 		]]>
	 	</mx:Script>
	
	 	<mx:Accordion id="accTreeHolder" height="100%" width="100%" creationPolicy="all">
	 			
	 		<graphing:DataStructure id="longTermRun1" label="Long-term Run 1" width="100%" height="100%"/>
	 		<graphing:DataStructure id="longTermRun2" label="Long-term Run 2" width="100%" height="100%"/>
	 		<graphing:DataStructure id="shortTermRun1" label="Real-time Run 1" width="100%" height="100%"/>
	 		<graphing:DataStructure id="shortTermRun2" label="Real-time Run 2" width="100%" height="100%"/>
	 				
	 	</mx:Accordion>
	 	
	 	
</mx:Panel>
