<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	label="RUN OPTIONS" 
	paddingTop="10"
	paddingLeft="10"
	paddingRight="10"
	toolTip="Input Variables" 
	implements="com.mcquilleninteractive.learnhvac.view.longterm.ILongTermOptionsPanel"
	width="100%" height="100%">
	
	
	
		<mx:Script>
			<![CDATA[
			
			import com.mcquilleninteractive.learnhvac.vo.LongTermSimulationVO
			import com.mcquilleninteractive.learnhvac.util.Logger
			import com.mcquilleninteractive.learnhvac.model.ScenarioModel
			import com.mcquilleninteractive.learnhvac.model.ApplicationModel
			import com.mcquilleninteractive.learnhvac.model.SystemVariable
			import com.mcquilleninteractive.learnhvac.model.LongTermSimulationModel
			import com.mcquilleninteractive.learnhvac.model.LongTermSimulationDataModel
			
			import mx.collections.ArrayCollection
			import mx.validators.Validator
						
			[Bindable]
			[Autowire]
			public var scenarioModel:ScenarioModel	
						
			[Bindable]	
			[Autowire]		
			public var longTermSimulationModel:LongTermSimulationModel	
			
				
			private var _elevationView:ElevationView
			private var _zoneSelector:ZoneSelector
		
			public var _errorMsg:String;
			public var _errorMsgArr:Array = []
			
			
			public var _validatorsArr:Array = [];
			
			
			[Bindable]
			private var _sysVarsAC:ArrayCollection = new ArrayCollection()
				
					
			public function setViewRefs(elevationView:ElevationView, zoneSelector:ZoneSelector):void
			{
				
				_elevationView = elevationView
				_zoneSelector = zoneSelector
			}
		
			public function initializeValues():void
			{	
			}
			
			[Mediate(event="ScenarioLoadedEvent.SCENARIO_LOADED")]
			public function onScenarioLoaded():void
			{	
				resetValues()					
			}
			
			public function resetValues():void
			{
				//set start and stop dates
				dfStartDate.enabled = scenarioModel.allow_longterm_date_change
				dfStopDate.enabled = scenarioModel.allow_longterm_date_change
				dfStartDate.selectedDate = longTermSimulationModel.startDate
				dfStopDate.selectedDate = longTermSimulationModel.stopDate
				
				//get import vars
				_sysVarsAC = scenarioModel.getLongTermExportSysVars()
			}
			
			
			public function isValid():Boolean
			{
				var results:Array = Validator.validateAll(_validatorsArr)
				if (results.length>0){
					var _errorMsg:String = "Some of the values you've entered are incorrect. Please check the following fields:\n"
					for (var i:uint=0; i<results.length; i++)
					{
						var s:String = _errorMsgArr[results[i].target.source.id] 
						_errorMsg = _errorMsg + "\n" + s
					}
					return false
				}		
				
				//check dates 				
				if (vldStartDay.validate()==false || vldStopDay.validate()==false) return false
				
				return true	
			}
			
			public function get errorMsg():String
			{
				return _errorMsg
			}
				
				
			public function unitsUpdate():void
			{				
				resetValues()
			}
			
			protected function formatValue(item:Object, column:DataGridColumn):String
			{
				if (item.currValue)
					return numFormatter.format(item.currValue)
				return ""
			}
			
			protected function onRunChange():void
			{
				Logger.debug("onRunChange()",this)
				longTermSimulationModel.runID = cboRun.selectedItem.data
			}
			
			protected function dfStartDayChange():void
			{
				longTermSimulationModel.startDate = dfStartDate.selectedDate
			}
			
			protected function dfStopDayChange():void
			{
				longTermSimulationModel.stopDate = dfStopDate.selectedDate 
			}
			
				
			]]>
		</mx:Script>
	
		

	<mx:StringValidator id="vldStartDay" 
		source="{dfStartDate}"  
		property="text"
		required="true"
		requiredFieldError="Please enter a date."/>
	
	<mx:StringValidator id="vldStopDay" 
		source="{dfStopDate}"  
		property="text" 
		required="true"
		requiredFieldError="Please enter a date."/>
		
	<mx:DateFormatter
		id="monthDayFormatter"
 	   	formatString="MMM DD"
   		/> 	   	   

   	<mx:NumberFormatter id="numFormatter" precision="2" rounding="nearest"/>
	
	
	<mx:HBox>
					
		<mx:Label text="Store results as:"  width="100" paddingTop="3"/>
		<mx:ComboBox id="cboRun"
			change="onRunChange()" 
			selectedIndex="0" 
			x="90" y="5" 
			toolTip="Store your simulation results as 'Run1' or 'Run2'">
			<mx:dataProvider>
				<mx:ArrayCollection>
					<mx:Object label="Run 1" data="{LongTermSimulationDataModel.RUN_1}"/>
					<mx:Object label="Run 2" data="{LongTermSimulationDataModel.RUN_2}"/>
				</mx:ArrayCollection>
			</mx:dataProvider>
		</mx:ComboBox>
					
	</mx:HBox>
		
	<mx:Spacer height="10"/>
		
	<mx:Label text="Run length:" fontWeight="bold" />
			
	<mx:HBox>					
		<mx:Label text="Start date: " fontSize="9"  width="100"   />
		<mx:DateField id="dfStartDate"	
       		x="90" y="33"
			yearNavigationEnabled="false"
    		visible="true"
    		change="dfStartDayChange()"
    		
    	   />	
	</mx:HBox>
   
    
	<mx:HBox>			
		<mx:Label text="Stop date: " fontSize="9"  width="100"  />
		<mx:DateField id="dfStopDate" 					   		
       		x="270" y="33"	    	
			yearNavigationEnabled="false"
    		visible="true"
    		change="dfStopDayChange()"
	 	/>	
	</mx:HBox>		
		    	
	<mx:Spacer height="10"/>	 
					
	<mx:Label text="Real-time Simulation Import" fontWeight="bold" />
	
	<mx:Text text="The following variables are drawn from the real-time simulation. These variables can only be changed from within the real-time simulation area."
				width="100%" height="50"
				/>
			
	<mx:DataGrid id="dgSparkVars"
		width="100%" height="350"
		dataProvider="{_sysVarsAC}"
		selectable="false"
		>
		<mx:columns>
			<mx:DataGridColumn dataField="display_name" headerText="Name" />
			<mx:DataGridColumn dataField="currValue" width="70" labelFunction="formatValue"  headerText="Value"/>
			<mx:DataGridColumn dataField="units" width="70" headerText="Units"  />
		</mx:columns>
	</mx:DataGrid>
					
			
	
</mx:VBox>
