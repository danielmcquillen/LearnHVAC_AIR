<?xml version="1.0" encoding="utf-8"?>
<mx:HBox 	xmlns:mx="http://www.adobe.com/2006/mxml" 
			height="105" 
			paddingLeft="10"  
			paddingTop="10" borderSides="bottom" borderColor="#888888" borderThickness="5"
			initialize="onInitialize()"
			>
    
    <mx:Script>
    	<![CDATA[
    		import com.mcquilleninteractive.learnhvac.model.ApplicationModel;
    		import com.mcquilleninteractive.learnhvac.vo.ScenarioListItemVO
    		import com.mcquilleninteractive.learnhvac.util.Logger;
    		import com.mcquilleninteractive.learnhvac.event.LoadScenarioEvent;
    		import com.mcquilleninteractive.learnhvac.event.GetScenarioListEvent;
    		
    		[Embed(source='/assets/img/pic_default_scenario.png')]
    		[Bindable]
    		public var defaultScenarioPic:Class
    		
    		public function onInitialize():void
    		{	
    			Logger.debug("#SelectScenarioItem: registering listener")
			}
    		
			
    		public function loadScenario():void
    		{
    			Logger.debug("#SelectScenarioItem: loading scenario")
    			var type:String
    			var fileName:String = ""
    			
    			var scenarioListItemVO:ScenarioListItemVO = ScenarioListItemVO(data)
    			
    			var event:LoadScenarioEvent
    			switch (scenarioListItemVO.sourceType)
    			{
    				case ScenarioListItemVO.SOURCE_LOCAL_FILE:
	    				event =  new LoadScenarioEvent(LoadScenarioEvent.LOAD_LOCAL_SCENARIO, true)
	    				event.fileName = scenarioListItemVO.fileName
    					break
    					
    				case ScenarioListItemVO.SOURCE_REMOTE:
    					event =  new LoadScenarioEvent(LoadScenarioEvent.LOAD_REMOTE_SCENARIO, true)
    					event.scenID = scenarioListItemVO.scenID
    					break
    					
    				case ScenarioListItemVO.SOURCE_DEFAULT:
    					event =  new LoadScenarioEvent(LoadScenarioEvent.LOAD_DEFAULT_SCENARIO, true)
    					event.scenarioXML = scenarioListItemVO.scenarioXML
    					break
    					
    				default:
    					Logger.error("Unrecognized scenarioListItem type: " + scenarioListItemVO.sourceType)
    					
    			}
    			    			
    			dispatchEvent(event)
    		}
    		
    		override public function set data( value:Object ) : void 
    		{
				super.data = value;
				if (value && (value.thumbnailURL==null || value.thumbnailURL==""))
				{
					scenarioThumbnail.source = new defaultScenarioPic()
				}
				else
    			{    				
					scenarioThumbnail.load()
    			}
			}

    		
			[Mediate(event="GetScenarioListEvent.SCENARIO_LIST_LOADED")]
    		public function onScenarioListLoaded(event:GetScenarioListEvent):void
    		{
    			Logger.debug("trying to load scenarioThumbnail...", this)
    			scenarioThumbnail.load()
    		}
    		
    		protected function showDefaultImage():void
    		{
    			Logger.warn("couldn't find pic at : " + data.thumbnailURL + " so using default image", this)
    			scenarioThumbnail.source = defaultScenarioPic
    			scenarioThumbnail.invalidateProperties()
    		}

    		
    		
    	]]>
    </mx:Script>
    
    <mx:VBox 	width="125"
         		height="90" 
         		horizontalAlign="center"
         		verticalAlign="middle">
        <mx:Canvas width="125" height="90">
        
        		<mx:Image id="scenarioThumbnail" 
		    		source="{defaultScenarioPic}"
		    		height="90" width="125" 
		    	    ioError="showDefaultImage()"
		    		 />
        </mx:Canvas>
    
    </mx:VBox>
    
    <mx:VBox >
        <mx:Label text="{data.name}" styleName="itemHeader" />
		<mx:Text text="{data.shortDescription}" width="400" height="35" />
		<mx:Button label="Start Scenario" width="120" height="25" click="loadScenario()"/>
	</mx:VBox>

</mx:HBox>
	