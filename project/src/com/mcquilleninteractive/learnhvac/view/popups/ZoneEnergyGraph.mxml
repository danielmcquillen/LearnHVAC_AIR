<?xml version="1.0" encoding="utf-8"?>
<util:DragPanel xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:util="com.mcquilleninteractive.learnhvac.util.*" 
	title="ZONE ENERGY"    
	preinitialize="onPreInit()" 
    minWidth="350"
    minHeight="200"
	width="350" height="250" xmlns:popups="com.mcquilleninteractive.learnhvac.view.popups.*">
	
	<mx:Script>
		<![CDATA[
			import com.mcquilleninteractive.learnhvac.event.ShortTermSimulationEvent;
			import com.mcquilleninteractive.learnhvac.model.LongTermSimulationModel;
			import com.mcquilleninteractive.learnhvac.model.ApplicationModel
			import com.mcquilleninteractive.learnhvac.model.ScenarioModel
			import com.mcquilleninteractive.learnhvac.model.SystemVariable
			import com.mcquilleninteractive.learnhvac.util.ColorSetting
			import com.mcquilleninteractive.learnhvac.util.Logger
   			import com.mcquilleninteractive.learnhvac.event.ScenarioLoadedEvent;
   			import com.mcquilleninteractive.learnhvac.event.SetUnitsCompleteEvent
			import com.mcquilleninteractive.learnhvac.event.ScenarioLoadedEvent
			import com.mcquilleninteractive.learnhvac.model.ScenarioModel
			import com.mcquilleninteractive.learnhvac.util.ColorSetting

			import mx.collections.ArrayCollection;
			
			

			[Bindable]
			[Autowire]
			public var scenarioModel:ScenarioModel
			
			
			[Bindable]
			[Autowire]
			public var longTermSimulationModel:LongTermSimulationModel

			[Bindable]
			private var zoneTotalsAC:ArrayCollection 
			
			private var _sysVarVAVRhcQd:SystemVariable 
			private var _valuesArr:Array 
			
			/* Specs from Brian
			
				zone level
				   * reheat coil power - ? (but for now, can use VAVRhcQd)
				   * lighting power - lighting load * size of zone 
				   * equipment power (ie. plug loads) - equipment load * size of zone

			*/
			
			
			public function onPreInit():void
			{	
				_valuesArr = [{group:"Zone Energy Use", VAVRhcQd:12, lightingPower:5, equipPower:2}]		
									
				zoneTotalsAC = new ArrayCollection(_valuesArr)
			
				//when this graph is first shown, a scenario will already have been loaded, so call onScenarioLoaded once to get it set up correctly
				onScenarioLoaded(null)
				
			}
			
			[Mediate(event="ScenarioLoadedEvent.SCENARIO_LOADED")]
			public function onScenarioLoaded(event:ScenarioLoadedEvent):void
			{
				//the number and type of sysVar isn't going to change much, so I'm not going to use 
				//binding, I'm just going to keep a ref and then update when the outputs are loaded
				_sysVarVAVRhcQd = scenarioModel.getSysVar("VAVRhcQd")				
				getRelevantValues()
				
			}
			
			[Mediate(event="SetUnitsCompleteEvent.UNITS_CHANGED")]
			public function onUnitsChanged(event:SetUnitsCompleteEvent):void
			{
				getRelevantValues()				
			}
			
			[Mediate(event="ShortTermSimulationEvent.SIM_OUTPUT_RECEIVED")]			
			public function onShortTermOutputUpdated(event:ShortTermSimulationEvent):void
			{
				getRelevantValues()
			}
			
			private function getRelevantValues():void
			{
				var obj:Object = zoneTotalsAC.getItemAt(0)
				var zoneSize:Number = longTermSimulationModel.getCurrentZoneSize()				
				obj.VAVRhcQd = _sysVarVAVRhcQd.currValue
				obj.lightingPower = longTermSimulationModel.lightingPeakLoad * zoneSize
				obj.equipPower = longTermSimulationModel.equipPeakLoad * zoneSize
				zoneTotalsAC.refresh()
			}
			
			private function onClose():void
			{
				Logger.debug("closing window.", this)
			}
			
			
			
			
		]]>
	</mx:Script>
	
	<mx:SolidColor id="reheatFill" color="{ColorSetting.heatingColor}"/>
	<mx:SolidColor id="lightingFill" color="{ColorSetting.lightingColor}"/>
	<mx:SolidColor id="equipFill" color="{ColorSetting.equipmentColor}"/>
	
	<mx:HBox width="100%" height="100%">
		
		
		 <mx:ColumnChart id="chart" type="stacked" 
		 	width="100%" height="100%" 
		 	dataProvider="{zoneTotalsAC}"
		    maxColumnWidth="30"
		    minWidth="150"
		    minHeight="150"
		    showDataTips="true">
	        
	        <mx:series>
	            <mx:ColumnSeries xField="group" yField="VAVRhcQd"  displayName="Reheat Coil Power" fill="{reheatFill}"  />
	            <mx:ColumnSeries xField="group" yField="lightingPower"  displayName="Lighting Power" fill="{lightingFill}"  />
	            <mx:ColumnSeries xField="group" yField="equipPower"  displayName="Equipment Power" fill="{equipFill}"  /> 
	        </mx:series>
	        
	        <mx:horizontalAxis>
	           <mx:CategoryAxis  categoryField="group"  />
	        </mx:horizontalAxis>
		               
	        <mx:verticalAxis >
	     		<mx:LinearAxis title="" id="yAxis" />
			</mx:verticalAxis>
	
			<mx:verticalAxisRenderers>
	    		<mx:AxisRenderer axis="{yAxis}" verticalAxisTitleAlignment="vertical" />
			</mx:verticalAxisRenderers>
	
	    </mx:ColumnChart>
	
		<popups:ZoneEnergyGraphLegend width="160" />
    
	
	</mx:HBox>
	
</util:DragPanel>
